{"version":3,"sources":["components/grid_utils.js","components/Box.js","components/Stop.js","components/material/Icon.js","components/Cursor.js","components/material/MaterialSelect.js","components/material/MaterialButton.js","components/Dropdown.js","components/material/MaterialForm.js","components/material/Accordion.js","components/material/AddButton.js","components/material/Checkbox.js","components/material/Tabs.js","components/material/Snackbar.js","components/material/Select.js","components/material/Modal.js","components/Grid.js","App.js","serviceWorker.js","index.js"],"names":["utils","_convertToPixels","x","y","totalX","totalY","moveX","parseInt","moveY","_numToMove","type","tempX","Math","abs","this","state","previousStopX","tempY","previousStopY","previousLegX","previousLegY","console","error","_calcStartingCell","sizeObj","_absDiff","firstCoordsObj","secondCoordsObj","xDiff","yDiff","_getDriverCoords","firstLegStopObj","lastLegStopObj","numToMoveObj","xToMove","yToMove","x1","x2","y1","y2","xNum","yNum","_percentToCoords","diffObj","percent","floor","_findPercentFromDriverCoords","firstStop","driverCoords","yAbsDiff","xAbsDiff","xPercent","yPercent","_makePlotJson","plotsArr","map","coords","i","name","String","fromCharCode","_toggleState","currentState","Box","props","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","allColored","legColored","completeColored","allColorsCounter","legColorsCounter","completedColorsCounter","previousLegIndex","BoxMarkup","bind","assertThisInitialized","_this2","toRender","obj","result","allColorsAddLogic","allColorsRemoveLogic","legColorsAddLogic","legColorsRemoveLogic","completedColorsAddLogic","completedColorsRemoveLogic","react_default","a","createElement","key","id","log","setState","stopsColor","hasStopColor","length","includes","legsColor","hasLegColor","leg","completeColor","hasCompletionColor","input","idStr","concat","className","selectedDriver","prevProps","prevState","toggleColor","index","Fragment","renderBoxes","React","Component","Stop","coord","_styles","styles","defineProperty","directions","xDir","pixels","toString","yDir","toggleStopNames","esm","_ref","ref","style","placement","_ref2","arrowProps","objectSpread","backgroundColor","color","borderRadius","marginLeft","display","data-placement","withStyles","theme","root","justifyContent","alignItems","icon","margin","spacing","unit","fontSize","position","right","top","iconHover","&:hover","black","classes","Icon_default","tabIndex","strType","Cursor","_style","driverID","colors","show","material_Icon","MaterialSelect","labelWidth","handleChange","event","target","value","ReactDOM","findDOMNode","InputLabelRef","offsetWidth","FormControl_default","variant","formControl","InputLabel_default","htmlFor","Select_default","native","onChange","OutlinedInput_default","legs","legID","flexWrap","minWidth","selectEmpty","marginTop","button","Button_default","size","data-number","buttonNumber","onClick","text","container","textField","marginRight","width","dense","menu","Dropdown","TextField_default","driverProgressInput","label","placeholder","ev","_this3","onSubmit","texts","driverText","colorText","material_MaterialSelect","renderInput","material_MaterialButton","MaterialForm","formName","formname","values","graphSize","Typography_default","addedClass","noValidate","autoComplete","renderFormType","buttonsize","Accordion","expanded","panel","ExpansionPanel_default","ExpansionPanelSummary_default","expandIcon","ExpandMore_default","heading","secondaryHeading","ExpansionPanelDetails_default","material_MaterialForm","components_Dropdown","typography","pxToRem","flexBasis","flexShrink","palette","secondary","fab","extendedIcon","Fab_default","aria-label","number","iconType","Add_default","src","alt","renderIcon","green","&$checked","checked","CheckboxLabels","checkedA","checkedB","checkedC","FormGroup_default","row","FormControlLabel_default","control","Checkbox_default","checkedState","TabContainer","component","padding","children","SimpleTabs","tabs","numberOfTabs","hovered","driverNum","indexToRemove","e","addTab","driverIndex","innerText","substring","iconClick","cursor","subtractTab","rect","getBoundingClientRect","clientX","left","clientY","stopPropagation","parentNode","classList","contains","dataset","cursorArr","AppBar_default","Tabs_default","indicator","handleTabsClick","tab","Tab_default","data-tip","data-key","onMouseMove","mouseEvent","handleRemoveButtonClick","dist_default","material_AddButton","handleAddButtonClick","material_Checkbox","checkedProps","material_Accordion","flexGrow","background","paper","variantIcon","success","CheckCircleIcon","warning","WarningIcon","ErrorIcon","info","InfoIcon","MySnackbarContentWrapper","dark","primary","amber","iconVariant","opacity","message","onClose","other","objectWithoutProperties","Icon","SnackbarContent_default","assign","classNames","aria-describedby","action","IconButton_default","close","Close_default","CustomizedSnackbars","open","handleClick","handleClose","reason","Snackbar_default","anchorOrigin","vertical","horizontal","snackbarOpen","autoHideDuration","SimpleSelect","xSelect","ySelect","inputProps","ref1","MenuItem_default","cells","cell","ref2","SimpleModal","handleOpen","makeRange","num","Array","from","v","that","setTimeout","handleSubmit","cellsrange","Modal_default","aria-labelledby","transform","handleSelectChange","setGraphSize","material_Select","SimpleModalWrapped","renderPlotsList","plots","plot","renderInputModal","boxShadow","shadows","outline","Grid","_callStops","asyncToGenerator","regenerator_default","mark","_callee","response","body","wrap","_context","prev","next","fetch","sent","json","status","Error","abrupt","stop","modalState","storeGraphSize","plotObjs","tempPlotObj","cancelSlide","sliderSlicedChunk","iconStartAtfirstStop","sliderIndex","initialSliderChange","sliderCoordsArrs","floatToggle","showStopNames","colorType","loadingDataArr","cursorIndex","createCounter","stops","jsonStops","stopsCopy","legToColorID","cursorFormX","cursorFormY","cursorLegInput","cursorInputProgress","currentCursor","startingCellNumAll","startingCellNumPartial","previousLegEndCell","partialLegStartCoords","partialLegEndCoords","boxesToRender","holdAllStopColorIndexes","holdAllLegColorArrs","holdingCompletedArrs","finalStopColorArr","finalLegColorObj","finalCompletedColorsArr","finalDriverMoveObj","finalSliderCoords","legStartEndCellNums","getWindowOffset","document","documentElement","setProperty","setCSSvars","calcRowVariaion","newCursorObj","arr","push","allCursors","increaseCursorIdindex","changeCursor","cursorID","cursorName","filter","toLowerCase","indexOf","splice","driverData","legName","activeLegID","firstLetter","secondLetter","firstStopOfLeg","lastStopOfLeg","progress","legProgress","numToMove","_utils$_getDriverCoor","moves","driverProgressinPixels","data","cursorArrCopy","slice","toConsumableArray","_resetCursor","_setStopCoords","updateDriverData","holdingArrIndex","_legIndex","dataIndex","thisLeg","legFirstStop","startStop","legLastStop","endStop","stopStartCoords","stopEndCoords","start","previousLegArrs","legStartEnd","moveRowCells","tempCellNum","loopAxis","tempCellNumsArr","tempStartNum","_this$_numToMove","legCellNums","end","merged","apply","stop1","stop2","undefined","_getLegStartfromCoords","firstStopIndex","secondStop","diff","newPositionWpercent","isArray","components_Cursor","counter","utilsTop","marginBottom","material_Modal","sqrt","handleStyle","renderCursor","components_Stop","stopsDirsArr","components_Box","material_Tabs","material_Snackbar","evt","sliderDiff","previousState","handleIndexValue","moveDriver","slideIndex","updateDriverWithCoords","flat","getPreviousSliderState","looper","element","checkClass","split","parentElement","hasParentClass","removeDriver","tabClickedIndex","toggleShowCursor","addNewCursor","colorAllStops","colorCompletedStops","selectedCursor","preventDefault","updatedData","updateCursorwithData","colorCompleted","colorLeg","currentTarget","xVal","yVal","offSet","toggleStartCheckbox","nextSibling","receivePlotData","handleModalOpenClose","setSliderCoords","tempSliderIndex","sliderChunkCopy","window","scrollTo","scrollHeight","querySelector","grid","offsetHeight","innerHeight","createGraph","scrollToBottom","xSlideCoord","ySlideCoord","currentSmall","previousSmall","longerArr","shorterArr","storeArr","xArr","yArr","lastXarr","lastYarr","j","_obj","_obj2","_obj3","keys","startObj","endObj","_this$_numBetweenStop","_numBetweenStops","xIsInteger","yIsInteger","alert","onDropdownSubmit","formData","toggleSnackbar","handlePlotLoading","_this4","legConstructor","forEach","colorGrid","then","res","legObj","coordsArr","App","components_Grid","Boolean","location","hostname","match","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d33ab812.chunk.js","sourcesContent":["var utils = (function() {\n  return {\n    _convertToPixels: function(x, y) {\n      if (!x) {\n        x = 0;\n      }\n      if (!y) {\n        y = 0;\n      }\n      let totalX;\n      let totalY;\n      if (x) {\n        x = x - 10;\n        totalX = 100 + x * 11;\n      } else {\n        totalX = x * 10;\n      }\n      if (y) {\n        y = y - 10;\n        totalY = 100 + y * 11;\n      } else {\n        totalY = y * 10;\n      }\n      let moveX = parseInt(totalX);\n      let moveY = parseInt(totalY);\n      let coordsObj = {\n        moveX: moveX,\n        moveY: moveY\n      };\n      return coordsObj;\n    },\n    _numToMove: function(x, y, type) {\n      if (type === \"stop\") {\n        let moveX = Math.abs(this.state.previousStopX - x);\n        let moveY = Math.abs(this.state.previousStopY - y);\n        return {\n          tempX: moveX,\n          tempY: moveY\n        };\n      } else if (type === \"leg\") {\n        let moveX = Math.abs(this.state.previousLegX - x);\n        let moveY = Math.abs(this.state.previousLegY - y);\n        return {\n          tempX: moveX,\n          tempY: moveY\n        };\n      } else {\n        console.error(\"error in the num to move function\");\n      }\n    },\n    _calcStartingCell: function(sizeObj) {\n      // find the corner cell formula is (x * y) - x\n      let startingCellNum =\n        parseInt(sizeObj.x) * parseInt(sizeObj.y) - parseInt(sizeObj.x);\n      return startingCellNum;\n    },\n    // takes 2 objs of coords and determines the diff\n    _absDiff: function(firstCoordsObj, secondCoordsObj) {\n      let xDiff = Math.abs(firstCoordsObj.x - secondCoordsObj.x);\n      let yDiff = Math.abs(firstCoordsObj.y - secondCoordsObj.y);\n      return {\n        xDiff,\n        yDiff\n      };\n    },\n    _getDriverCoords: function(firstLegStopObj, lastLegStopObj, numToMoveObj) {\n      let x1 = firstLegStopObj.x;\n      let x2 = lastLegStopObj.x;\n      let y1 = firstLegStopObj.y;\n      let y2 = lastLegStopObj.y;\n      let xNum = numToMoveObj.xNum;\n      let yNum = numToMoveObj.yNum;\n      // if x moves up, add\n      let xToMove;\n      let yToMove;\n      if (x1 < x2) {\n        xToMove = x1 + xNum;\n      } else if (x1 >= x2) {\n        xToMove = x1 - xNum;\n      } else {\n        console.error(\"error in driver movement\");\n      }\n      if (y1 < y2) {\n        yToMove = y1 + yNum;\n      } else if (y1 >= y2) {\n        yToMove = y1 - yNum;\n      } else {\n        console.error(\"error in driver movement\");\n      }\n      return {\n        x: xToMove,\n        y: yToMove\n      };\n    },\n    // take amount in leg with a percent - returns num to move out of total leg number\n    _percentToCoords: function(diffObj, percent) {\n      let xNum = Math.floor(diffObj.xDiff * 0.01 * percent);\n      let yNum = Math.floor(diffObj.yDiff * 0.01 * percent);\n      return { xNum, yNum };\n    },\n    // takes first stop obj, driver coords obj, and abs diff of a single stops axis\n    _findPercentFromDriverCoords(firstStop, driverCoords, yAbsDiff, xAbsDiff) {\n      let x1 = parseInt(firstStop.x);\n      let y1 = parseInt(firstStop.y);\n      let x2 = parseInt(driverCoords.x);\n      let y2 = parseInt(driverCoords.y);\n\n      let xDiff;\n      let yDiff;\n\n      // find number moved from last stop\n      if (x1 < x2) {\n\n        xDiff = x2 - x1;\n      } else if (x1 > x2) {\n        xDiff = x1 - x2;\n      } else if (x1 === x2) {\n        xDiff = 0;\n\n      } else {\n        console.error(\"error in driver movement\");\n      }\n      if (y1 < y2) {\n        yDiff = y2 - y1;\n      } else if (y1 > y2) {\n        yDiff = y1 - y2;\n      } else if (y1 === y2) {\n        yDiff = 0;\n      } else {\n        console.error(\"error in driver movement\");\n      }\n\n      // divide number moved so far in leg by total number in leg\n      let xPercent;\n      let yPercent;\n      // check for zero vals\n      if (xDiff === 0) {\n        xPercent = 0;\n      }\n      if (yDiff === 0) {\n        yPercent = 0;\n      }\n      if (xDiff && xDiff !== 0) {\n        xPercent = xDiff / xAbsDiff;\n      }\n      if (yDiff && yDiff !== 0) {\n        yPercent = yDiff / yAbsDiff;\n      }\n      // let finalPercent\n\n      // if one val is missing use the other alone\n      if (!xPercent || !yPercent) {\n        if (xPercent) {\n          return xPercent * 100;\n        } else if (yPercent) {\n          return yPercent * 100;\n        }\n      }\n      // it both are zero then zero percent\n      if (xPercent === 0 && yPercent === 0) {\n        return 0;\n      }\n\n      \n      //use the larger leg to updaet val - TODO: make both percents equal so driver fits back into grid\n      if (xAbsDiff > yAbsDiff) {\n        return xPercent;\n      } else if (xAbsDiff < yAbsDiff) {\n        return yPercent;\n        // if equal use the larger percent\n      } else if (xAbsDiff === yAbsDiff) {\n        if (xPercent >= yPercent) {\n          return xPercent;\n        } else {\n          return yPercent;\n        }\n      } else {\n        console.error(\"An error occured in the percentage calcs\");\n        return;\n      }\n    },\n    // make json from the entered plot points\n    _makePlotJson(plotsArr) {\n      return plotsArr.map((coords, i) => {\n        return {\n          name: String.fromCharCode(i + 65),\n          x: coords.x,\n          y: coords.y\n        };\n      });\n    },\n    _toggleState(currentState) {\n      if (!currentState) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n  };\n})();\n\nexport default utils;\n","import React from \"react\";\nimport utils from \"./grid_utils\"\n\n// takes the num of boxes/cells to be produced\nclass Box extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      allColored: false,\n      legColored: false,\n      completeColored: false,\n      allColorsCounter: 0,\n      legColorsCounter: 0,\n      completedColorsCounter: 0,\n      previousLegIndex: \"\"\n    }\n    this.BoxMarkup = this.BoxMarkup.bind(this)\n  }\n  renderBoxes(i) {\n    if (this.props.toRender) {\n      let { toRender } = this.props\n      return toRender.map((obj, i) => {\n        let result\n        switch (this.props.type) {\n          case \"all\":\n            if (!this.state.allColored) {\n              result = this.allColorsRemoveLogic(i)\n            } else if (this.state.allColored) {\n              result = this.allColorsAddLogic(i)\n            }\n            break\n          case \"leg\":\n            if (!this.state.legColored) {\n              result = this.legColorsRemoveLogic(i)\n            } else if (this.state.legColored) {\n              result = this.legColorsAddLogic(i)\n            }\n            break\n          case \"complete\":\n            if (!this.state.completeColored) {\n              result = this.completedColorsRemoveLogic(i)\n            } else if (this.state.completeColored) {\n              result = this.completedColorsAddLogic(i)\n            }\n            break\n          default:\n            // on first render just run markup\n            result = <this.BoxMarkup key={i} id={i}/>\n            break\n        }\n        return result\n      });\n    }\n  }\n  toggleColor(type) {\n    if (type === \"all\") {\n      console.log(\"opposite\", this.state.allColored)\n      this.setState({\n        allColored: utils._toggleState(this.state.allColored)\n      })\n    } else if (type === \"leg\") {\n      console.log(\"opposite\", this.state.legColored)\n      this.setState({\n        legColored: utils._toggleState(this.state.legColored)\n      })\n    } else if (type === \"complete\") {\n      console.log(\"opposite\", this.state.completeColored)\n      this.setState({\n        completeColored: utils._toggleState(this.state.completeColored)\n      })\n    }\n  }\n  allColorsAddLogic(i) {\n    let { stopsColor } = this.props\n    let hasStopColor = (() => {\n      if (!stopsColor || !stopsColor.length || !stopsColor.includes(i))\n        return false\n      return true\n    })();\n    return <this.BoxMarkup hasStopColor={hasStopColor} key={i} id={i} />\n  }\n  allColorsRemoveLogic(i) {\n    let { stopsColor } = this.props\n    let hasStopColor = (() => {\n      if (stopsColor && stopsColor.includes(i)) return false\n    })();\n    return <this.BoxMarkup hasStopColor={hasStopColor} key={i} id={i} />\n  }\n  legColorsAddLogic(i) {\n    let { legsColor } = this.props\n    legsColor = legsColor.leg\n    let hasLegColor = (() => {\n      if (!legsColor || !legsColor.length || !legsColor.includes(i))\n        return false\n      return true\n    })();\n    return <this.BoxMarkup hasLegColor={hasLegColor} key={i} id={i} />\n  }\n  legColorsRemoveLogic(i) {\n    let { legsColor } = this.props\n    legsColor = legsColor.leg\n    let hasLegColor = (() => {\n      if (legsColor && legsColor.includes(i)) return false;\n  })();\n    return <this.BoxMarkup hasLegColor={hasLegColor} key={i} id={i} />\n  }\n  completedColorsAddLogic(i) {\n    let { completeColor } = this.props\n    let hasCompletionColor = (() => {\n      if (!completeColor || !completeColor.length || !completeColor.includes(i))\n        return false\n      return true\n    })();\n    return <this.BoxMarkup hasCompletionColor={hasCompletionColor} key={i} id={i} />\n  }\n  completedColorsRemoveLogic(i) {\n    let { completeColor } = this.props\n    let hasCompletionColor = (() => {\n      if (completeColor && completeColor.includes(i)) return false;\n    })();\n    return <this.BoxMarkup hasCompletionColor={hasCompletionColor} key={i} id={i} />\n  }\n\n  BoxMarkup(input) {\n      let idStr = `id${input.id}`\n      return (\n      <div\n        id={idStr}\n        key={input.id}\n        className={`box ${input.hasStopColor ? `stop-color${this.props.selectedDriver}` : \"\"} ${\n          input.hasLegColor ? `leg-color${this.props.selectedDriver}` : \"\"\n        } ${input.hasCompletionColor ? `complete-color${this.props.selectedDriver}` : \"\"}`}\n      />\n    )\n  }\n  componentDidUpdate(prevProps, prevState) {\n    // check if this props is dif than last - to stop it firing over and over\n    if (this.props.allColorsCounter !== prevProps.allColorsCounter) {\n      // if state count is not yet updated\n      if (this.state.allColorsCounter !== this.props.allColorsCounter) {\n        console.log(\"toggle\")\n        this.toggleColor(\"all\")\n        this.setState({\n            // update by one\n          allColorsCounter: this.props.allColorsCounter\n        })\n      } else {\n        console.error(\"And error in the all index logic\")\n      }\n    }\n    // check for change - if counter diff then there is a change\n    if (this.props.legColorsCounter !== prevProps.legColorsCounter) {\n      // if new leg, index will be diff\n      if (this.props.legsColor.index !== this.state.previousLegIndex) {\n        console.log(\"change leg\")\n        // udpate index\n        this.setState({\n          previousLegIndex: this.props.legsColor.index,\n          legColored: true\n        })\n        // if same leg, index will match previous then just toggle off\n      } else if (this.props.legsColor.index === this.state.previousLegIndex) {\n        console.log(\"toggle leg\")\n        this.toggleColor(\"leg\")\n      } else {\n        console.error(\"An error in the leg index logic\")\n      }\n    }\n    if (\n      this.props.completedColorsCounter !== prevProps.completedColorsCounter\n    ) {\n      if (\n        this.state.completedColorsCounter !== this.props.completedColorsCounter\n      ) {\n        // update by one\n        this.toggleColor(\"complete\")\n        this.setState({\n          completedColorsCounter: this.props.completedColorsCounter\n        })\n      } else {\n        console.error(\"An error in the complete index logic\")\n      }\n    }\n  }\n  render() {\n\n    if (this.props.toRender && this.props.toRender.length) {\n      return <React.Fragment>{this.renderBoxes()}</React.Fragment>\n    } else {\n      return <div>No Boxes yet!</div>\n    }\n  }\n}\n\nexport default Box\n","import React from 'react'\nimport { Manager, Reference, Popper } from 'react-popper';\n\n// takes and array of directions and pixes for x and y\nfunction Stop(props){\n    if(!props.coords) return null\n    // console.log('props', props)\n    let coordsArr = props.coords\n    return coordsArr.map((coord, i) => {\n        let styles = {\n            [coord.directions.xDir]: coord.pixels.moveX.toString() + 'px',\n            [coord.directions.yDir]: coord.pixels.moveY.toString() + 'px',\n        }\n        function toggleStopNames(props){\n            if(props.toggleStopNames){\n                return \"block\"\n            } else {\n                return \"none\"\n            }\n        }\n        return(\n            <Manager key={i}>\n        <Reference>\n          {({ ref }) => (\n            <div ref={ref} className=\"stop-marker\" style={styles} />\n          )}\n        </Reference>\n        <Popper placement=\"left\">\n          {({ ref, style, placement, arrowProps }) => (\n            <div\n              ref={ref}\n              style={{ ...style,\n                  backgroundColor: \"rgba(0,0,0,0.5)\",\n                  color: \"#fff\",\n                  borderRadius: \"5px\",\n                  marginLeft: \"20px\",\n                  display: toggleStopNames(props),\n              }}\n              data-placement={placement}\n            >\n              {`stop${i + 1}`}\n              <div ref={arrowProps.ref} style={arrowProps.style} />\n            </div>\n          )}\n        </Popper>\n      </Manager>\n        )\n    })\n}\n\nexport default Stop\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport black from '@material-ui/core/colors';\nimport Icon from '@material-ui/core/Icon';\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'flex-end',\n  },\n  icon: {\n    margin: theme.spacing.unit * 2,\n    color: \"#A0A0A0\t\",\n    fontSize: \"12px\",\n    position: \"absolute\",\n    right: \"-7px\",\n    top: \"0\"\n\n  },\n  iconHover: {\n    margin: theme.spacing.unit * 2,\n    '&:hover': {\n      color: black,\n    },\n  },\n});\n\nfunction Icons(props) {\n  const { classes } = props;\n  return (\n\n          (props.type === \"stop\" ?\n          <div className={classes.root}>\n          {console.log('stop')}\n              <Icon\n                ref={props.ref} className={`${classes.icon} stop-marker`} color=\"primary\"\n                tabIndex=\"-1\"\n                style={props.styles}>\n              {props.strType}\n            </Icon>\n          </div>\n          :\n           <div className={classes.root}>\n              <Icon\n              className={`${classes.icon} ${props.className}`}\n              color=\"primary\"\n              tabIndex=\"-1\"\n              style={props.style}>\n              {props.strType}\n            </Icon>\n          </div>)\n\n\n  );\n}\n\nIcons.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Icons);\n","import React from 'react'\nimport Icon from './material/Icon'\n\n// takes and array of directions and pixes for x and y\nfunction Cursor(props){\n    if(!props.coords) return null\n    let coord = props.coords\n    let driverID = props.coords.id\n    let style = {\n        [coord.directions.xDir]: coord.pixels.moveX.toString() + 'px',\n        [coord.directions.yDir]: coord.pixels.moveY.toString() + 'px',\n        \"--driver-color\": props.colors[driverID]\n    }\n    return(\n        <div className={`${props.show ? 'show' : 'hide' } cursor-wrapper icon-wrapper`} style={style}>\n            <Icon\n                 className=\"cursor\"\n                 strType=\"place\"\n                 />\n        </div>\n    )\n}\n\nexport default Cursor\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport { withStyles } from '@material-ui/core/styles';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  formControl: {\n    margin: theme.spacing.unit,\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing.unit * 2,\n  },\n});\n\nclass MaterialSelect extends React.Component {\n  state = {\n    leg: '',\n    labelWidth: 0,\n  };\n\n  componentDidMount() {\n    this.setState({\n      labelWidth: ReactDOM.findDOMNode(this.InputLabelRef).offsetWidth,\n    });\n  }\n\n  handleChange = name => event => {\n    this.setState({ [name]: event.target.value });\n  };\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div className={classes.root}>\n\n        <FormControl variant=\"outlined\" className={classes.formControl}>\n          <InputLabel\n            ref={ref => {\n              this.InputLabelRef = ref;\n            }}\n            htmlFor=\"outlined-age-native-simple\"\n          >\n            Legs\n          </InputLabel>\n          <Select\n            native\n            value={this.props.value}\n            onChange={this.props.onChange}\n            input={\n              <OutlinedInput\n                name={this.props.type === 'driver' ? 'driver-select': 'color-select'}\n                labelWidth={this.state.labelWidth}\n                id=\"outlined-age-native-simple\"\n              />\n            }\n          >\n          <option value=\"\" />\n          {\n              this.props.legs.map((leg, i) => {\n                return <option key={i} value={this.state.value}>{leg.legID}</option>\n              })\n          }\n\n          </Select>\n        </FormControl>\n\n      </div>\n    );\n  }\n}\n\nMaterialSelect.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(MaterialSelect);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\nconst styles = theme => ({\n  button: {\n    margin: theme.spacing.unit,\n  },\n  input: {\n    display: 'none',\n  },\n});\n\nfunction MaterialButton(props) {\n  const { classes } = props;\n  return (\n      <Button variant=\"contained\" type={props.type} size={props.size} color={props.color} className={`${props.type} button ${classes.button}`} data-number={props.buttonNumber} onClick={props.onClick}>\n        {props.text}\n      </Button>\n  );\n}\n\nMaterialButton.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(MaterialButton);\n","import React from 'react'\nimport MaterialSelect from './material/MaterialSelect'\nimport MaterialButton from './material/MaterialButton'\nimport TextField from '@material-ui/core/TextField';\n\n\nconst styles = theme => ({\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    textField: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n        width: 200,\n    },\n    dense: {\n        marginTop: 19,\n    },\n    menu: {\n        width: 200,\n    },\n})\n\nclass Dropdown extends React.Component{\n    constructor(props) {\n\t\tsuper(props)\n        this.state = {\n            }\n\t}\n\n    renderInput(){\n        return(\n            <div className=\"progress-input-wrapper form-child\">\n\n                <TextField\n                    value={this.props.driverProgressInput}\n                    id=\"standard-name\"\n                    label=\"Progress\"\n                    placeholder=\"Progres in Percent\"\n                    className={`${styles.textField} progress-input`}\n                    name=\"progress-input\"\n                    onChange={ev =>  this.props.onChange(ev)}\n                    margin=\"normal\"\n\n                />\n            </div>\n        )\n    }\n    render(){\n\n        if(this.props.legs){\n\n            return(\n                <div className=\"legs-container\">\n\n                <form name={this.props.type === 'driver' ? 'driver-dropdown': 'color'} onSubmit={(ev) => this.props.onSubmit(ev)}>\n                    <label className=\"form-child\">\n                    {this.props.type === 'driver' ? this.props.texts.driverText: this.props.texts.colorText}\n                    <MaterialSelect legs={this.props.legs} value={this.state.value} onChange={this.props.onChange} type={this.props.type === 'driver' ? 'driver' : 'color'}>\n\n                        <option></option>\n                    {\n                        this.props.legs.map((leg, i) => {\n                            return <option key={i} value={this.state.value}>{leg.legID}</option>\n                        })\n                    }\n                    </MaterialSelect>\n                    </label>\n                    {this.props.type === 'driver'?\n                    this.renderInput() : null\n                    }\n                    <MaterialButton type=\"submit\" value=\"Submit\" size=\"large\" color=\"primary\" text=\"Toggle Leg\"/>\n\n                </form>\n\n                </div>\n            )\n        } else {\n            return null\n        }\n\n    }\n\n}\n\nexport default Dropdown\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport MaterialButton from './MaterialButton';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    width: 200,\n  },\n  dense: {\n    marginTop: 19,\n  },\n  menu: {\n    width: 200,\n  },\n});\n\nclass MaterialForm extends React.Component {\n  state = {\n      formName: this.props.formname\n  };\n\n  handleChange = name => event => {\n    this.setState({\n      [name]: event.target.value,\n    });\n  }\n  renderFormType(props, classes){\n      if(props.values && !props.graphSize){\n          return(\n              <React.Fragment>\n                  <TextField\n                      id=\"standard-name\"\n                      label=\"X-coords\"\n                      placeholder=\"1-200\"\n                      className={classes.textField}\n                      value={props.values.x}\n                      onChange={props.onChange}\n                      margin=\"normal\"\n                      name=\"x\"\n                  />\n                  <TextField\n                      id=\"standard-name\"\n                      label=\"Y-coords\"\n                      placeholder=\"1-200\"\n                      className={classes.textField}\n                      value={props.values.y}\n                      onChange={props.onChange}\n                      margin=\"normal\"\n                      name=\"y\"\n                  />\n              </React.Fragment>\n          )\n      } else if(!props.values){\n          return(\n              <React.Fragment>\n                  <TextField\n                  id=\"standard-name\"\n                  label=\"X-coords\"\n                  placeholder=\"1-200\"\n                  className={classes.textField}\n                  onChange={props.onChange}\n                  margin=\"normal\"\n                  name=\"x\"\n                  />\n                  <TextField\n                  id=\"standard-name\"\n                  label=\"Y-coords\"\n                  placeholder=\"1-200\"\n                  className={classes.textField}\n                  onChange={props.onChange}\n                  margin=\"normal\"\n                  name=\"y\"\n                  />\n              </React.Fragment>\n          )\n      } else if(props.values && props.graphSize){\n          return(\n              <React.Fragment>\n               <Typography id=\"graph-size-label\">Graph Size</Typography>\n                  <TextField\n                  id=\"graph-size-form-x\"\n                  label=\"X length\"\n                  placeholder=\"1-100\"\n                  className={classes.textField}\n                  onChange={props.onChange}\n                  margin=\"normal\"\n                  name=\"x\"\n                  />\n                  <TextField\n                  id=\"graph-size-form-y\"\n                  label=\"Y height\"\n                  placeholder=\"1-100\"\n                  className={classes.textField}\n                  onChange={props.onChange}\n                  margin=\"normal\"\n                  name=\"y\"\n                  />\n              </React.Fragment>\n          )\n      }\n  }\n  render() {\n      // console.log(this.props)\n    const { classes } = this.props;\n    return (\n      <form className={`${classes.container} ${this.props.addedClass} material-form`} noValidate autoComplete=\"off\" name={this.state.formName} onSubmit={(ev) => this.props.onSubmit(ev)}>\n        {this.renderFormType(this.props, classes)}\n             <MaterialButton size={this.props.buttonsize} color=\"primary\" type=\"primary-button\" text=\"Submit\" buttonNumber={3}/>\n      </form>\n    );\n  }\n}\n\nMaterialForm.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(MaterialForm);\n","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport Dropdown from \"../Dropdown\";\nimport MaterialButton from \"./MaterialButton\";\nimport MaterialForm from \"./MaterialForm\";\n\nconst styles = theme => ({\n  root: {\n    width: \"100%\"\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    flexBasis: \"33.33%\",\n    flexShrink: 0\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n    color: theme.palette.text.secondary\n  }\n});\n\nclass Accordion extends React.Component {\n  state = {\n    expanded: null\n  };\n\n  handleChange = panel => (event, expanded) => {\n    this.setState({\n      expanded: expanded ? panel : false\n    });\n  };\n\n  render() {\n    const { classes } = this.props;\n    const { expanded } = this.state;\n\n    return (\n      <div className={classes.root}>\n        <ExpansionPanel\n          className=\"top-panel\"\n          expanded={expanded === \"panel1\"}\n          onChange={this.handleChange(\"panel1\")}\n        >\n          <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n            <Typography className={classes.heading}>\n              Set Cursor Coordinates\n            </Typography>\n            <Typography className={classes.secondaryHeading}>\n              Set cursor place on grid.\n            </Typography>\n          </ExpansionPanelSummary>\n          <ExpansionPanelDetails>\n            <MaterialForm\n              onChange={this.props.onChange}\n              onSubmit={this.props.onSubmit}\n              values={this.props.values}\n              formname=\"driver-form\"\n              buttonsize=\"large\"\n            />\n            <Typography />\n          </ExpansionPanelDetails>\n        </ExpansionPanel>\n        <ExpansionPanel\n          className=\"top-panel\"\n          expanded={expanded === \"panel2\"}\n          onChange={this.handleChange(\"panel2\")}\n        >\n          <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n            <Typography className={classes.heading}>Set Cursor Leg</Typography>\n            <Typography className={classes.secondaryHeading}>\n              Set cursor inside legs at progress points.\n            </Typography>\n          </ExpansionPanelSummary>\n          <ExpansionPanelDetails className=\"second-panel\">\n            <Dropdown\n              onChange={this.props.onChange}\n              onSubmit={this.props.onSubmit}\n              legs={this.props.legs ? this.props.legs : null}\n              type=\"driver\"\n              texts={this.props.texts}\n            />\n            <Typography />\n          </ExpansionPanelDetails>\n        </ExpansionPanel>\n\n        <ExpansionPanel\n          className=\"top-panel\"\n          expanded={expanded === \"panel3\"}\n          onChange={this.handleChange(\"panel3\")}\n        >\n          <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n            <Typography className={classes.heading}>\n              Show Legs & Progress\n            </Typography>\n            <Typography className={classes.secondaryHeading}>\n              Highlight completed parts, and legs.\n            </Typography>\n          </ExpansionPanelSummary>\n          <ExpansionPanelDetails className=\"third-panel\">\n            <Dropdown\n              onChange={this.props.onChange}\n              onSubmit={this.props.onSubmit}\n              legs={this.props.legs ? this.props.legs : null}\n              type=\"color\"\n              texts={this.props.texts}\n            />\n            <MaterialButton\n              size=\"large\"\n              color=\"primary\"\n              type=\"secondary-button\"\n              text=\"Progess\"\n              buttonNumber={2}\n              onClick={this.props.onClick}\n            />\n\n            <Typography />\n          </ExpansionPanelDetails>\n        </ExpansionPanel>\n      </div>\n    );\n  }\n}\n\nAccordion.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(Accordion);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\n\nconst styles = theme => ({\n  fab: {\n    margin: theme.spacing.unit,\n    backgroundColor: \"#2196f3\"\n  },\n  extendedIcon: {\n    marginRight: theme.spacing.unit\n  }\n});\nfunction renderIcon(props) {\n  if (props.iconType === \"add\") {\n    return <AddIcon />;\n  } else if (props.iconType === \"minus\") {\n    return (\n      <img\n        className=\"minus-svg\"\n        src=\"./icons/remove_24px.svg\"\n        alt=\"minus sign\"\n      />\n    );\n  } else {\n    return null;\n  }\n}\n\nfunction AddButton(props) {\n  const { classes } = props;\n  return (\n    <div className=\"add-button-container\">\n      <Fab\n        size=\"small\"\n        color=\"primary\"\n        aria-label=\"Add\"\n        className={`add-button button ${classes.fab}`}\n        onClick={ev => props.onClick(ev)}\n        data-number={props.number}\n      >\n        {renderIcon(props)}\n        <AddIcon />\n      </Fab>\n    </div>\n  );\n}\n\nAddButton.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(AddButton);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport green from '@material-ui/core/colors/green';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport Favorite from '@material-ui/icons/Favorite';\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder';\n\nconst styles = {\n  root: {\n    color: green[600],\n    '&$checked': {\n      color: green[500],\n    },\n  },\n  checked: {},\n};\n\nclass CheckboxLabels extends React.Component {\n  state = {\n    checkedA: false,\n    checkedB: false,\n    checkedC: false\n  };\n\n  handleChange = () => event => {\n    let name  = this.props.value\n    if(this.props.onChange){\n        this.props.onChange(event)\n    }\n    this.setState({ [name]: event.target.checked });\n };\n checkedState(){\n     if(this.props.value === \"checkedA\"){\n         return this.state.checkedA\n     } else if(this.props.value === \"checkedB\"){\n         return this.state.checkedB\n     } else if(this.props.value === \"checkedC\"){\n         return this.state.checkedC\n     }\n }\n  render() {\n    const { classes } = this.props;\n    return (\n      <FormGroup row  className='checkbox-container'>\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={this.checkedState()}\n              onChange={this.handleChange()}\n              value={this.props.value}\n              name={this.props.name}\n            />\n\n          }\n          label={this.props.label}\n        />\n\n      </FormGroup>\n    );\n  }\n}\n\nCheckboxLabels.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(CheckboxLabels);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Accordion from \"./Accordion\";\nimport AddButton from \"./AddButton\";\nimport MaterialButton from \"./MaterialButton\";\nimport Icon from \"./Icon\";\nimport Checkbox from \"./Checkbox\";\nimport ReactTooltip from 'react-tooltip'\n\n\n\nfunction TabContainer(props) {\n  return (\n    <Typography component=\"div\" style={{ padding: 8 * 3 }}>\n      {props.children}\n    </Typography>\n  );\n}\n\nTabContainer.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nconst styles = (theme, color) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper\n    },\n    indicator: {\n        backgroundColor: color\n  }\n})\n\nclass SimpleTabs extends React.Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            value: 0,\n            tabs: [{ label: \"Driver 1\" }],\n            numberOfTabs: 1,\n            hovered: false,\n            checkedA: false,\n            checkedB: false,\n            checkedC: false\n        };\n    }\n// handle check boxes\n  handleChange = (event, value) => {\n      if(event.target.name === \"float-toggle\"){\n          this.props.onChange(event)\n          return\n      }\n      if(event.target.name === \"toggle\"){\n          this.props.onChange(event)\n          return\n      } else if(event.target.name === \"stop-name-toggle\"){\n          this.props.onChange(event)\n          return\n      }\n    this.setState({ value: this.props.selectedDriver });\n  };\n  addTab(){\n      let driverNum = this.state.numberOfTabs + 1\n      this.setState({\n          numberOfTabs: driverNum\n      })\n  }\n  // takes index to extract from array\n  subtractTab(indexToRemove){\n\n      if(this.state.numberOfTabs < 2){\n          console.log('cannot subtract single driver')\n          return\n      }\n      let numberOfTabs = this.state.numberOfTabs - 1\n\n      this.setState({\n          numberOfTabs: numberOfTabs\n      })\n\n\n  }\n  handleAddButtonClick(e){\n      this.props.onClick(e)\n      this.addTab()\n      this.setState({value: this.props.selectedDriver})\n  }\n  handleRemoveButtonClick(e){\n      if(!this.state.hovered){\n          return\n      }\n      let driverIndex = parseInt(e.target.innerText.substring(13,14)) - 1\n      // send click to parent\n      this.props.onClick({event: e, iconClick:true, cursor:true})\n      this.subtractTab(driverIndex)\n  }\n\n   mouseEvent(e) {\n    // e = Mouse click event.\n        var rect = e.target.getBoundingClientRect();\n        var x = e.clientX - rect.left; //x position within the element.\n        var y = e.clientY - rect.top;  //y position within the element.\n\n        if(y <= 27 && x >= 60){\n            this.setState({hovered: true})\n        } else {\n            this.setState({hovered: false})\n        }\n    }\n    handleTabsClick(e){\n        e.stopPropagation()\n        if(this.state.hovered || e.target.parentNode.parentNode.parentNode.classList.contains(\"tabs-element\")){\n            return\n        } else if(e.target.type === \"button\" && e.target.dataset.key){\n            // send click to parent\n            this.props.onClick({event: e, iconClick:false, cursor:true})\n        }\n    }\n\n    renderIcon(){\n        return(\n            <div tabIndex=\"-1\" className=\"icon-wrapper\">\n              <Icon\n                className=\"close-icon\"\n                strType=\"close\"\n                />\n            </div>)\n    }\n  render() {\n    const { classes } = this.props;\n    if(this.props.cursorArr){\n        return (\n            <div className={classes.root}>\n            <AppBar position=\"static\">\n\n                <Tabs\n                    classes={{\n                        indicator: classes.indicator\n                    }}\n                    className=\"tabs-element\"\n                    name=\"tabs\"\n                    value={this.props.selectedDriver}\n                    onChange={this.handleChange}\n                    onClick={this.handleTabsClick.bind(this)} >\n\n                {\n                    this.props.cursorArr.map((tab, i) => {\n\n                    return(\n                        <div>\n                            <Tab\n                                data-tip=\"Click to Hide Cursor\"\n                                data-key={i}\n                                icon={this.renderIcon()} onMouseMove={this.mouseEvent.bind(this)}\n                                label={tab.name}\n                                key={i}\n                                onClick={this.handleRemoveButtonClick.bind(this)}>\n                           </Tab>\n                           <ReactTooltip />\n                        </div>)\n                       })\n                }\n                <AddButton\n                    onClick={this.handleAddButtonClick.bind(this)}\n                    />\n                    <div className=\"checkboxes\">\n\n                        <Checkbox\n                            checkedProps={this.state.checkedA}\n                            value=\"checkedA\"\n                            name=\"float-toggle\"\n                            label=\"Floating Controls\"/>\n                        <Checkbox\n                            value=\"checkedB\"\n                            name=\"stop-name-toggle\"\n                            label=\"Show Stop Names\"/>\n                    </div>\n\n                <MaterialButton\n                    size=\"small\"\n                    color=\"secondary\"\n                    text=\"Toggle Route\"\n                    type=\"secondary-button\"\n                    onClick={this.props.onClick}\n                    buttonNumber={1}/>\n\n            </Tabs>\n\n            </AppBar>\n\n                <TabContainer>\n\n                <Accordion\n                    onClick={this.props.onClick}\n                    onSubmit={this.props.onSubmit}\n                    onChange={this.props.onChange}\n\n                    values={this.props.values}\n\n                    legs={this.props.legs ? this.props.legs : null}\n                    texts={this.props.texts}\n                    />\n                </TabContainer>\n            </div>\n        )\n    } else {\n        return null\n    }\n  }\n}\n\nSimpleTabs.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\n\nexport default withStyles(styles)(SimpleTabs);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\nimport CloseIcon from '@material-ui/icons/Close';\nimport green from '@material-ui/core/colors/green';\nimport amber from '@material-ui/core/colors/amber';\nimport IconButton from '@material-ui/core/IconButton';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst variantIcon = {\n  success: CheckCircleIcon,\n  warning: WarningIcon,\n  error: ErrorIcon,\n  info: InfoIcon,\n};\n\nconst styles1 = theme => ({\n  success: {\n    backgroundColor: green[600],\n  },\n  error: {\n    backgroundColor: theme.palette.error.dark,\n  },\n  info: {\n    backgroundColor: theme.palette.primary.dark,\n  },\n  warning: {\n    backgroundColor: amber[700],\n  },\n  icon: {\n    fontSize: 20,\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing.unit,\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n});\n\nfunction MySnackbarContent(props) {\n  const { classes, className, message, onClose, variant, ...other } = props;\n  const Icon = variantIcon[variant];\n\n  return (\n    <SnackbarContent\n      className={classNames(classes[variant], className)}\n      aria-describedby=\"client-snackbar\"\n      message={\n        <span id=\"client-snackbar\" className={classes.message}>\n          <Icon className={classNames(classes.icon, classes.iconVariant)} />\n          {message}\n        </span>\n      }\n      action={[\n        <IconButton\n          key=\"close\"\n          aria-label=\"Close\"\n          color=\"inherit\"\n          className={classes.close}\n          onClick={onClose}\n        >\n          <CloseIcon className={classes.icon} />\n        </IconButton>,\n      ]}\n      {...other}\n    />\n  );\n}\n\nMySnackbarContent.propTypes = {\n  classes: PropTypes.object.isRequired,\n  className: PropTypes.string,\n  message: PropTypes.node,\n  onClose: PropTypes.func,\n  variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired,\n};\n\nconst MySnackbarContentWrapper = withStyles(styles1)(MySnackbarContent);\n\nconst styles2 = theme => ({\n  margin: {\n    margin: theme.spacing.unit,\n  },\n});\n\nclass CustomizedSnackbars extends React.Component {\n  state = {\n    open: false,\n  };\n\n  handleClick = () => {\n      console.log('click')\n    this.setState({ open: false });\n  };\n\n  handleClose = (event, reason) => {\n      console.log('close')\n    if (reason === 'clickaway') {\n        this.setState({\n            open: false\n        })\n      return;\n    }\n    this.setState({ open: false });\n  };\n\n  render() {\n    return (\n      <div>\n        <Snackbar\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'left',\n          }}\n          open={this.props.snackbarOpen}\n          autoHideDuration={6000}\n          onClose={this.handleClose}\n          onClick={this.props.onClick}\n          className=\"snackbar\"\n        >\n          <MySnackbarContentWrapper\n              onClose={this.handleClose}\n              variant=\"info\"\n              message=\"Those coords are not part of the route.\"\n          />\n        </Snackbar>\n      </div>\n    );\n  }\n}\n\nCustomizedSnackbars.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles2)(CustomizedSnackbars);\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FormControl from '@material-ui/core/FormControl'\nimport Select from '@material-ui/core/Select'\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  formControl: {\n    margin: theme.spacing.unit,\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing.unit * 2,\n  },\n})\n\nclass SimpleSelect extends React.Component {\n  state = {\n    value: '',\n    name: '',\n    xSelect: '',\n    ySelect: ''\n  }\n  handleChange = event => {\n      console.log(event.target.name)\n      console.log(event.target.value)\n      this.props.onChange(event)\n    this.setState({ [event.target.name]: event.target.value })\n\n  }\n\n  render() {\n    const { classes } = this.props\n    return (\n      <form className={classes.root} autoComplete=\"off\">\n        <FormControl className={`${classes.formControl} regular`}>\n          <InputLabel htmlFor=\"age-simple\">X</InputLabel>\n          <Select\n            value={this.state.xSelect}\n            onChange={this.handleChange}\n            inputProps={{\n              name: 'xSelect',\n              id: 'x-simple-select',\n            }}\n            ref={this.ref1}\n          >\n            <MenuItem value=\"\">\n              <em>None</em>\n            </MenuItem>\n            { this.props.cells.map((cell,i) => {\n            return <MenuItem value={cell+1} key={i}>{cell+1}</MenuItem>\n               })\n            }\n\n          </Select>\n        </FormControl>\n        <FormControl className={classes.formControl}>\n          <InputLabel htmlFor=\"age-simple\">Y</InputLabel>\n          <Select\n            value={this.state.ySelect}\n            onChange={this.handleChange}\n            inputProps={{\n              name: 'ySelect',\n              id: 'y-simple-select',\n            }}\n            ref={this.ref2}\n          >\n            <MenuItem value=\"\">\n              <em>None</em>\n            </MenuItem>\n            { this.props.cells.map((cell,i) => {\n            return <MenuItem value={cell+1} key={i}>{cell+1}</MenuItem>\n               })\n            }\n          </Select>\n        </FormControl>\n\n      </form>\n    )\n  }\n}\n\nSimpleSelect.propTypes = {\n  classes: PropTypes.object.isRequired,\n}\n\nexport default withStyles(styles)(SimpleSelect)\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Modal from \"@material-ui/core/Modal\";\nimport Select from \"./Select\";\nimport Icon from \"./Icon\";\nimport MaterialForm from \"./MaterialForm\";\nimport MaterialButton from \"./MaterialButton\";\n\n\nfunction getModalStyle() {\n  const top = 50;\n  const left = 50;\n\n  return {\n    width: \"500px\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`\n  };\n}\n\nconst styles = theme => ({\n  paper: {\n    position: \"absolute\",\n    width: theme.spacing.unit * 50,\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing.unit * 4,\n    outline: \"none\"\n  }\n});\n\nclass SimpleModal extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      open: false,\n      cells: \"\"\n    };\n\n    this.makeRange = this.makeRange.bind(this);\n  }\n\n  handleOpen = e => {\n    this.setState({ open: true });\n  };\n\n  handleClose = e => {\n    this.setState({ open: false });\n    this.props.onChange(e);\n  };\n\n  // make range for select dropdowns\n  makeRange() {\n    let num = this.props.cells;\n    let arr = Array.from({ length: num }, (v, i) => i);\n    return arr;\n  }\n  componentDidMount() {\n    let that = this;\n    // set state from parent to open modal\n    setTimeout(function() {\n      that.setState({\n        open: that.props.open\n      });\n    }, 1000);\n  }\n  componentDidUpdate() {\n    // when parent updates the state, it will register here\n    if (this.props.open !== this.state.open) {\n      this.setState({\n        open: this.props.open\n      });\n    }\n  }\n  // send events to parents\n  handleSelectChange(e) {\n    this.props.onChange(e);\n  }\n  handleSubmit(e) {\n    this.props.onSubmit(e);\n  }\n  handleClick(e) {\n    e.stopPropagation();\n    if (e.target.classList && e.target.classList.contains(\"close-icon\")) {\n      this.handleClose(e);\n    } else if (\n      e.target.classList &&\n      (e.target.classList.contains(\"modal-submit\") ||\n        e.target.classList.contains(\"auto-plot-submit\"))\n    ) {\n      this.handleSubmit(e);\n    }\n  }\n  renderIcon() {\n    let that = this;\n    return (\n      <div tabIndex=\"-1\" className=\"icon-wrapper\">\n        <Icon\n          className=\"close-icon\"\n          strType=\"close\"\n          onClick={that.handleClick.bind(that)}\n        />\n      </div>\n    );\n  }\n  renderInputModal(classes) {\n    let cellsrange = this.makeRange(this.props.cells);\n    return (\n      <React.Fragment>\n        <Modal\n          aria-labelledby=\"simple-modal-title\"\n          aria-describedby=\"simple-modal-description\"\n          open={this.state.open}\n          onClose={this.handleClose}\n          onClick={this.handleClick.bind(this)}\n        >\n          <div style={getModalStyle()} className={`${classes.paper} modal`}>\n            <div className=\"modal-col modal-left\">\n              <Typography variant=\"h6\" id=\"modal-title\">\n                Set Graph Size\n              </Typography>\n              <MaterialForm\n                graphSize={true}\n                onChange={this.handleSelectChange.bind(this)}\n                onSubmit={this.handleSubmit.bind(this)}\n                values={this.state.setGraphSize}\n                formname=\"graph-size\"\n                addedClass=\"graph-size\"\n                buttonsize=\"small\"\n              />\n            </div>\n            <div className=\"modal-center modal-col\">\n              <Icon className=\"close-icon\" strType=\"close\" />\n              <Typography variant=\"h6\" id=\"modal-title\">\n                Set Plot Points\n              </Typography>\n              <Typography variant=\"subtitle1\" id=\"simple-modal-description\">\n                <Select\n                  cells={cellsrange}\n                  onChange={this.handleSelectChange.bind(this)}\n                />\n              </Typography>\n              <Typography variant=\"subtitle2\" id=\"simple-modal-description\">\n                <div className=\"auto-plot\">\n                  <span id=\"auto-plot-span\">\n                    <strong>OR</strong>\n                  </span>\n                  <MaterialButton\n                    type=\"auto-plot-submit submit\"\n                    value=\"Submit\"\n                    size=\"small\"\n                    color=\"primary\"\n                    text=\"Auto\"\n                    onClick={this.handleClick.bind(this)}\n                    />\n                </div>\n              </Typography>\n            </div>\n            <SimpleModalWrapped />\n            <div className=\"modal-right modal-col\">\n              <Typography variant=\"h6\" id=\"modal-title\">\n                Points Plotted\n              </Typography>\n              {this.renderPlotsList(this.props)}\n              <MaterialButton\n                type=\" modal-submit submit\"\n                value=\"Submit\"\n                size=\"small\"\n                color=\"secondary\"\n                text=\"Graph\"/>\n            </div>\n          </div>\n        </Modal>\n      </React.Fragment>\n    );\n  }\n  renderPlotsList(props) {\n    if (!props.plots) return;\n    return (\n      <div className=\"plots-list-container\">\n        <ol className=\"plots-list\">\n          {props.plots.map((plot, i) => {\n            return (\n              <li key={i}>\n                <strong>X</strong>:{plot.x}&nbsp;&nbsp;&nbsp; <strong>Y</strong>\n                :{plot.y}\n              </li>\n            );\n          })}\n        </ol>\n      </div>\n    );\n  }\n  render() {\n    const { classes } = this.props;\n    return <React.Fragment>{this.renderInputModal(classes)}</React.Fragment>;\n  }\n}\n\nSimpleModal.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\n// We need an intermediary variable for handling the recursive nesting.\nconst SimpleModalWrapped = withStyles(styles)(SimpleModal);\n\nexport default SimpleModalWrapped;\n","import React, { Component } from \"react\";\n\nimport \"../App.css\";\nimport Box from \"./Box\";\nimport Stop from \"./Stop\";\nimport Cursor from \"./Cursor\";\nimport Tabs from \"./material/Tabs\";\nimport Snackbar from \"./material/Snackbar\";\nimport utils from \"./grid_utils\";\nimport MaterialButton from \"./material/MaterialButton\";\nimport Modal from \"./material/Modal\";\n\nclass Grid extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tmodalState: true,\n\t\t\tsetGraphSize: { x: \"20\", y: \"20\" },\n\t\t\tstoreGraphSize: { x: \"20\", y: \"20\" },\n\t\t\tplotObjs: [],\n\t\t\ttempPlotObj: { x: \"\", y: \"\" },\n\t\t\tcancelSlide: false,\n\t\t\tsliderSlicedChunk: [],\n\t\t\ticonStartAtfirstStop: false,\n\t\t\tsliderIndex: 0,\n\t\t\tinitialSliderChange: true,\n\t\t\tsliderCoordsArrs: [],\n\t\t\t// utilsTop: '',\n\t\t\tcolors: [\n\t\t\t\t\"red\",\n\t\t\t\t\"Orange\",\n\t\t\t\t\"DodgerBlue\",\n\t\t\t\t\"MediumSeaGreen\",\n\t\t\t\t\"Violet\",\n\t\t\t\t\"SlateBlue\",\n\t\t\t\t\"Tomato\"\n\t\t\t],\n\t\t\tfloatToggle: false,\n\t\t\tshowStopNames: false,\n\t\t\tsnackbarOpen: false,\n\t\t\tallColorsCounter: 0,\n\t\t\tlegColorsCounter: 0,\n\t\t\tcompletedColorsCounter: 0,\n\t\t\tcolorType: \"\",\n\t\t\tloadingDataArr: [],\n\t\t\tcursorIndex: 0,\n\t\t\tcreateCounter: 0,\n\t\t\tlegs: [],\n\t\t\tstops: [],\n\t\t\tjsonStops: [],\n\t\t\tstopsCopy: [],\n\t\t\tlegToColorID: \"\",\n\t\t\tcursorFormX: \"\",\n\t\t\tcursorFormY: \"\",\n\t\t\tcursorLegInput: \"\",\n\t\t\tcursorArr: [],\n\t\t\tcursorInputProgress: \"\",\n\t\t\tcurrentCursor: \"\",\n\t\t\tstartingCellNumAll: 0,\n\t\t\tstartingCellNumPartial: \"\",\n\t\t\tpreviousLegEndCell: 0,\n\t\t\tpreviousStopX: 0,\n\t\t\tpreviousStopY: 0,\n\t\t\tpreviousLegX: 0,\n\t\t\tpreviousLegY: 0,\n\t\t\tpartialLegStartCoords: \"\",\n\t\t\tpartialLegEndCoords: \"\",\n\t\t\tboxesToRender: Array.from({ length: 100 }, (v, i) => i),\n\t\t\tholdAllStopColorIndexes: [],\n\t\t\tholdAllLegColorArrs: [],\n\t\t\tholdingCompletedArrs: [],\n\t\t\tfinalStopColorArr: [],\n\t\t\tfinalLegColorObj: [],\n\t\t\tfinalCompletedColorsArr: [],\n\t\t\tfinalDriverMoveObj: \"\",\n\t\t\tfinalSliderCoords: [],\n\t\t\tlegStartEndCellNums: [],\n\t\t\ttexts: {\n\t\t\t\tdriverText: \"Select leg for driver\",\n\t\t\t\tcolorText: \"Select a Leg to color\"\n\t\t\t}\n\t\t};\n\t\tthis.getWindowOffset = this.getWindowOffset.bind(this);\n\t\tthis.handleChange = this.handleChange.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t\tthis.handleClick = this.handleClick.bind(this);\n\t}\n\tcreateGraph() {\n\t\tlet that = this;\n\t\t// take state of graph and multiple to get num\n\t\tlet cells =\n\t\t\tparseInt(this.state.setGraphSize.x) * parseInt(this.state.setGraphSize.y);\n\t\tif(!cells) {\n\t\t\tconsole.error(\"No cell values\");\n\t\t\treturn;\n\t\t}\n\t\tthat.setState({\n\t\t\tboxesToRender: Array.from({ length: cells }, (v, i) => i)\n\t\t});\n\t\tsetCSSvars();\n\t\t// sets vals in css to grid size\n\t\tfunction setCSSvars() {\n\t\t\t// console.log(that.state.setGraphSize)\n\t\t\tlet root = document.documentElement;\n\t\t\troot.style.setProperty(\"--graph-size-x\", that.state.setGraphSize.x);\n\t\t\troot.style.setProperty(\"--graph-size-y\", that.state.setGraphSize.y);\n\t\t}\n\t\tsetTimeout(function() {\n\t\t\tthat.setState({\n\t\t\t\tstartingCellNumAll: utils._calcStartingCell(that.state.setGraphSize)\n\t\t\t});\n\t\t\tthat.calcRowVariaion();\n\t\t});\n\t}\n\t// takes coords and type - needs access to state\n\t_numToMove(x, y, type) {\n\t\tif(type === \"stop\") {\n\t\t\tlet moveX = Math.abs(this.state.previousStopX - x);\n\t\t\tlet moveY = Math.abs(this.state.previousStopY - y);\n\t\t\treturn {\n\t\t\t\ttempX: moveX,\n\t\t\t\ttempY: moveY\n\t\t\t};\n\t\t} else if(type === \"leg\") {\n\t\t\tlet moveX = Math.abs(this.state.previousLegX - x);\n\t\t\tlet moveY = Math.abs(this.state.previousLegY - y);\n\t\t\treturn {\n\t\t\t\ttempX: moveX,\n\t\t\t\ttempY: moveY\n\t\t\t};\n\t\t} else {\n\t\t\tconsole.error(\"error in the num to move function\");\n\t\t}\n\t}\n\t// take amount in leg with a percent - returns num to move out of total leg number\n\t_percentToCoords(diffObj, percent) {\n\t\tlet xNum = Math.floor(diffObj.xDiff * 0.01 * percent);\n\t\tlet yNum = Math.floor(diffObj.yDiff * 0.01 * percent);\n\t\treturn { xNum, yNum };\n\t}\n\t// update createCounter by 1\n\tincreaseCursorIdindex() {\n\t\tlet x = this.state.createCounter + 1;\n\t\tthis.setState({\n\t\t\tcreateCounter: x\n\t\t});\n\t}\n\t// new add driver - runs on mount and when add button clicked\n\taddNewCursor() {\n\t\tlet newCursorObj = {\n\t\t\tdirections: {\n\t\t\t\txDir: \"left\",\n\t\t\t\tyDir: \"bottom\"\n\t\t\t},\n\t\t\tpixels: {\n\t\t\t\tmoveX: 0,\n\t\t\t\tmoveY: 0\n\t\t\t},\n\t\t\tid: this.state.createCounter,\n\t\t\tname: `cursor ${this.state.createCounter + 1}`,\n\t\t\tcolor: this.state.colors[this.state.createCounter],\n\t\t\tshow: false\n\t\t};\n\t\tlet arr = [];\n\t\tarr.push(newCursorObj);\n\t\tlet allCursors = this.state.cursorArr.concat(arr);\n\t\tthis.setState({\n\t\t\tcursorArr: allCursors\n\t\t});\n\t\tthis.increaseCursorIdindex();\n\t\tthis.changeCursor(\"new-cursor\", newCursorObj.id);\n\t}\n\t// make new driver the selectedDriver on add\n\tchangeCursor(type, cursorID) {\n\t\t//set new driver to be the selectedDriver\n\t\tif(type === \"new-cursor\")\n\t\t\tthis.setState({\n\t\t\t\tcursorIndex: cursorID,\n\t\t\t\tcolorType: \"\"\n\t\t\t});\n\t\telse if(type === \"change-cursor\") {\n\t\t\tthis.setState({\n\t\t\t\tcursorIndex: cursorID\n\t\t\t});\n\t\t}\n\t}\n\tremoveDriver(event) {\n\t\t// get the full name of the driver\n\t\tlet cursorName = event.event.target.dataset.key;\n\t\t// filter out driver by that name\n\t\tlet cursor = this.state.cursorArr.filter(obj => {\n\t\t\treturn obj.name === cursorName.toLowerCase() ? obj : false;\n\t\t});\n\t\t// change to next available one lower than the deleted one\n\t\tfor(var i = this.state.cursorArr.length - 1; i >= 0; i--) {\n\t\t\tif(cursor[0].id > this.state.cursorArr[i].id) {\n\t\t\t\tthis.changeCursor(\"change-cursor\", this.state.cursorArr[i].id);\n\t\t\t}\n\t\t}\n\t\tlet that = this;\n\t\tsetTimeout(function() {\n\t\t\tlet index = that.state.cursorArr.indexOf(cursor[0]);\n\t\t\t// splice out of cursorArr\n\t\t\tthat.state.cursorArr.splice(index, 1);\n\t\t\tthat.setState({\n\t\t\t\tcursorArr: that.state.cursorArr\n\t\t\t});\n\t\t});\n\t}\n\t// runs on load using pre-loaded data and when form submitted\n\tupdateCursorwithData(driverData) {\n\t\tlet selectedDriver = this.state.cursorArr[this.state.cursorIndex];\n\t\t// get from api or form\n\t\tlet legName = driverData.activeLegID;\n\t\t// correlate with stops- letters to match stops needed\n\t\tlet firstLetter = legName[0];\n\t\tlet secondLetter = legName[1];\n\t\t// get stop coords = filter ones that match\n\t\tlet firstStopOfLeg = this.state.stops.filter(stop => {\n\t\t\treturn stop.name === firstLetter;\n\t\t});\n\t\tlet lastStopOfLeg = this.state.stops.filter(stop => {\n\t\t\treturn stop.name === secondLetter;\n\t\t});\n\t\t//calc abs distance bwt coords  - coords for first and last\n\t\tlet diffObj = utils._absDiff(firstStopOfLeg[0], lastStopOfLeg[0]);\n\t\tlet progress = parseInt(driverData.legProgress);\n\t\t// takes number of moves and percent - returns number of moves that is\n\t\tlet numToMove = utils._percentToCoords(diffObj, progress);\n\t\t// takes coords for first, last and how many -returns up / down & COORDS\n\t\tlet { x, y } = utils._getDriverCoords(\n\t\t\tfirstStopOfLeg[0],\n\t\t\tlastStopOfLeg[0],\n\t\t\tnumToMove\n\t\t);\n\t\tlet moves = utils._getDriverCoords(\n\t\t\tfirstStopOfLeg[0],\n\t\t\tlastStopOfLeg[0],\n\t\t\tnumToMove\n\t\t);\n\t\t// convert the number to move to pixels\n\t\tlet driverProgressinPixels = utils._convertToPixels(x, y);\n\t\tselectedDriver.pixels = driverProgressinPixels;\n\t\tselectedDriver.data = driverData;\n\t\tselectedDriver.driverCoords = moves;\n\t\tlet cursorArrCopy = this.state.cursorArr.slice();\n\t\tcursorArrCopy[this.state.cursorIndex] = selectedDriver;\n\n\t\tthis.setState({\n\t\t\tcursorArr: cursorArrCopy\n\t\t});\n\t}\n\t// on click set driver with coords and send to child\n\tupdateDriverWithCoords(coords, type) {\n\t\tlet selectedDriver = this.state.cursorArr[this.state.cursorIndex];\n\t\tlet cursorArr = [...this.state.cursorArr];\n\t\tif(type === \"form\") {\n\t\t\t// reset to zero\n\t\t\tthis._resetCursor();\n\t\t\t// from form\n\t\t\tcoords = this._setStopCoords(\n\t\t\t\t\"driver\",\n\t\t\t\tthis.state.cursorFormX,\n\t\t\t\tthis.state.cursorFormY\n\t\t\t);\n\t\t\t// toggle driver to first stop of map start\n\t\t} else if(type === \"checkbox\") {\n\t\t\tif(this.state.iconStartAtfirstStop) {\n\t\t\t\tcoords = this._setStopCoords(\"driver\", coords.x, coords.y);\n\t\t\t\tselectedDriver.driverCoords.x = this.state.stops[0].x;\n\t\t\t\tselectedDriver.driverCoords.y = this.state.stops[0].y;\n\t\t\t\tconsole.log(\"S\", selectedDriver);\n\t\t\t\tthis.setState({\n\t\t\t\t\tcursorArr: cursorArr\n\t\t\t\t});\n\t\t\t\tthis.updateDriverData();\n\t\t\t\t// else start at beginning\n\t\t\t} else if(!this.state.iconStartAtfirstStop) {\n\t\t\t\tcoords = this._setStopCoords(\"driver\", coords.x, coords.y);\n\t\t\t\tselectedDriver.driverCoords.x = 0;\n\t\t\t\tselectedDriver.driverCoords.y = 0;\n\t\t\t\tthis.setState({\n\t\t\t\t\tcursorArr: cursorArr\n\t\t\t\t});\n\t\t\t\tthis.updateDriverData();\n\t\t\t}\n\t\t} else if(type === \"slider\") {\n\t\t\t// from params\n\t\t\tcoords = this._setStopCoords(\"driver\", coords.x, coords.y);\n\t\t} else if(type === \"manual\") {\n\t\t\t// reset to zero\n\t\t\tthis._resetCursor();\n\t\t\tcoords = this._setStopCoords(\"driver\", coords.x, coords.y);\n\t\t\tcursorArr[this.state.cursorIndex].driverCoords = { x: 0, y: 0 };\n\t\t}\n\t\t// subtract for icon positionSelect\n\t\tcoords.pixels.moveX = coords.pixels.moveX - 30;\n\t\t// update the values in the object\n\t\tcursorArr[this.state.cursorIndex].directions = coords.directions;\n\t\tcursorArr[this.state.cursorIndex].pixels = coords.pixels;\n\t\t// set new driver vals\n\t\tthis.setState({\n\t\t\tcursorArr: cursorArr\n\t\t});\n\t}\n\t// calc up to driver position to color\n\tcolorCompleted(legID, type) {\n\t\tlet selectedDriver = this.state.cursorArr[this.state.cursorIndex];\n\t\tvar arr = this.state.legs.filter(leg => {\n\t\t\t// console.log(leg.legID)\n\t\t\treturn leg.legID === legID;\n\t\t});\n\n\t\t//index for arr of cell nums\n\t\tlet holdingArrIndex = this._legIndex(arr[0].legID);\n\t\t// index for json with legs info\n\t\tlet dataIndex = this.state.legs.indexOf(arr[0]);\n\t\t//all previous legs to color\n\t\t// var previousLegNames = this.state.legs.slice(0,index)\n\n\t\t// get arr of all previous arrs to cell nums\n\t\t// var previousLegArrs = this.state.holdAllLegColorArrs.slice(0, holdingArrIndex)\n\t\t//get current arr leg of cell nums\n\t\t// var currentLegArr = this.state.holdAllLegColorArrs[holdingArrIndex]\n\t\t// console.log('previouslegs', previousLegArrs)\n\t\t// console.log('currnt arr', currentLegArr)\n\t\t// get current and next leg json info\n\t\tlet thisLeg = this.state.legs[dataIndex];\n\t\t// console.log(thisLeg)\n\t\tlet legFirstStop = this.state.stops.filter(stop => {\n\t\t\treturn stop.name === thisLeg.startStop;\n\t\t});\n\t\t// console.log(legFirstStop)\n\t\tlet legLastStop = this.state.stops.filter(stop => {\n\t\t\treturn stop.name === thisLeg.endStop;\n\t\t});\n\t\t// get first and end coords\n\t\tlet stopStartCoords = {\n\t\t\tx: legFirstStop[0].x,\n\t\t\ty: legFirstStop[0].y\n\t\t};\n\t\tlet stopEndCoords = {\n\t\t\tx: legLastStop[0].x,\n\t\t\ty: legLastStop[0].y\n\t\t};\n\t\t// console.log(stopStartCoords)\n\t\t// console.log(stopEndCoords)\n\t\t// get diff to get number of moves\n\t\t// let diffObj = utils._absDiff(stopStartCoords, stopEndCoords)\n\t\t// console.log(diff)\n\t\t// percent driver is complete of leg\n\t\t// let progress = parseInt(this.state.driver.legProgress)\n\t\t// // takes number of moves and percent - returns number of moves that is partial of leg in coords\n\t\t// let numToMove = utils._percentToCoords(diffObj, progress)\n\t\t// console.log('num to move', numToMove)\n\t\t// console.log(this.state.legStartEndCellNums)\n\t\t// cell nums\n\t\tlet start = this.state.legStartEndCellNums[holdingArrIndex];\n\t\t// console.log('start/end', start, end)\n\t\t// set startingCell and start x / y\n\n\t\t// this.state.startingCellNumPartial: start/end cells\n\t\t// 24034 34034\n\t\t// this.partialLegStartCoords: start x/y\n\t\t// {x: 35, y: 80}\n\t\t// this.state.partialLegEndCoords: end\n\t\t// {x: 35, y: 30}\n\t\tvar previousLegArrs = this.state.holdAllLegColorArrs.slice(\n\t\t\t0,\n\t\t\tholdingArrIndex\n\t\t);\n\n\t\tthis.setState({\n\t\t\tstartingCellNumPartial: start,\n\t\t\tpartialLegStartCoords: stopStartCoords,\n\t\t\tpartialLegEndCoords: stopEndCoords,\n\t\t\tholdingCompletedArrs: [...previousLegArrs]\n\t\t});\n\t\t// console.log('startingCell', start)\n\t\t// console.log('stop/start', stopStartCoords)\n\t\t// console.log('partial leg end', stopEndCoords)\n\t\t// console.log('all', [...previousLegArrs])\n\n\t\t// console.log(this.state.holdingCompletedArrs)\n\t\t// console.log(start, end)\n\t\t// set state to start coords\n\t\t// inout end coords\n\t\t// this.state.driverCoords.x = 20\n\t\t// this.state.driverCoords.y = 13\n\t\t// console.log(selectedDriver)\n\t\tif(type === \"data\") {\n\t\t\t// console.log(selectedDriver)\n\t\t\tthis.legStartEnd(\n\t\t\t\tselectedDriver.driverCoords.x,\n\t\t\t\tselectedDriver.driverCoords.y,\n\t\t\t\t\"partial\"\n\t\t\t);\n\t\t} else if(type === \"coords\") {\n\t\t\tthis.legStartEnd(\n\t\t\t\tselectedDriver.driverCoords.x,\n\t\t\t\tselectedDriver.driverCoords.y,\n\t\t\t\t\"partial\"\n\t\t\t);\n\t\t}\n\t}\n\t// calc num of cells to vertial based on grid size\n\tcalcRowVariaion() {\n\t\t// formula - move up/down is the same value as x and y\n\t\tthis.setState({\n\t\t\tmoveRowCells: parseInt(this.state.setGraphSize.x)\n\t\t});\n\t}\n\tcolorGrid(x, y, type) {\n\t\t// calc num of units to move based on prev position\n\t\tlet tempCellNumsArr = [];\n\t\tlet tempX = x;\n\t\tlet tempY = y;\n\t\tlet tempCellNum;\n\t\tlet loopAxis;\n\t\tif(type === \"all\") {\n\t\t\ttempCellNum = this.state.startingCellNumAll;\n\t\t}\n\t\t// convert based on next move using above function\n\t\ttempX = this._numToMove(tempX, tempY, \"stop\").tempX;\n\t\ttempY = this._numToMove(tempX, tempY, \"stop\").tempY;\n\t\t// on first move on grid only - for bottom corner\n\t\tif(this.state.previousStopX === 0 && this.state.previousStopY === 0) {\n\t\t\ttempX = tempX - 1;\n\t\t\ttempY = tempY - 1;\n\t\t\ttempCellNumsArr.push(tempCellNum);\n\t\t}\n\t\t// move in tandem while both vals exist\n\t\twhile(tempX && tempY) {\n\t\t\t// console.log(this.state.moveRowCells)\n\t\t\t// if last was les than current- do this\n\t\t\tif(this.state.previousStopY < y) {\n\t\t\t\ttempCellNum = tempCellNum - this.state.moveRowCells;\n\t\t\t\ttempCellNumsArr.push(tempCellNum);\n\t\t\t} else if(this.state.previousStopY > y) {\n\t\t\t\ttempCellNum = tempCellNum + this.state.moveRowCells;\n\t\t\t\ttempCellNumsArr.push(tempCellNum);\n\t\t\t}\n\t\t\tif(this.state.previousStopX < x) {\n\t\t\t\ttempCellNum = tempCellNum + 1;\n\t\t\t\ttempCellNumsArr.push(tempCellNum);\n\t\t\t} else if(this.state.previousStopX > x) {\n\t\t\t\ttempCellNum = tempCellNum - 1;\n\t\t\t\ttempCellNumsArr.push(tempCellNum);\n\t\t\t}\n\t\t\ttempX = tempX - 1;\n\t\t\ttempY = tempY - 1;\n\t\t}\n\t\t// axis - loop over the only one left X or Y\n\t\tloopAxis = tempY ? (loopAxis = tempY) : (loopAxis = tempX);\n\t\t// if only on val left, move on its own\n\t\tfor(var i = 0; i < loopAxis; i++) {\n\t\t\tif(tempY) {\n\t\t\t\tif(this.state.previousStopY < y) {\n\t\t\t\t\ttempCellNum = tempCellNum - this.state.moveRowCells;\n\t\t\t\t\ttempCellNumsArr.push(tempCellNum);\n\t\t\t\t} else if(this.state.previousStopY > y) {\n\t\t\t\t\ttempCellNum = tempCellNum + this.state.moveRowCells;\n\t\t\t\t\ttempCellNumsArr.push(tempCellNum);\n\t\t\t\t}\n\t\t\t} else if(tempX) {\n\t\t\t\tif(this.state.previousStopX < x) {\n\t\t\t\t\ttempCellNum = tempCellNum + 1;\n\t\t\t\t\ttempCellNumsArr.push(tempCellNum);\n\t\t\t\t} else if(this.state.previousStopX > x) {\n\t\t\t\t\ttempCellNum = tempCellNum - 1;\n\t\t\t\t\ttempCellNumsArr.push(tempCellNum);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(type === \"all\") {\n\t\t\tthis.setState({\n\t\t\t\tpreviousStopX: x,\n\t\t\t\tpreviousStopY: y,\n\t\t\t\tstartingCellNumAll: tempCellNum,\n\t\t\t\tholdAllStopColorIndexes: [\n\t\t\t\t\t...this.state.holdAllStopColorIndexes,\n\t\t\t\t\t...tempCellNumsArr\n\t\t\t\t]\n\t\t\t});\n\t\t}\n\t}\n\t// takes x y and determine start and end cells\n\tlegStartEnd(x, y, type) {\n\t\tlet tempCellNumsArr = [];\n\t\tlet tempX = x;\n\t\tlet tempY = y;\n\t\t// start remains the same\n\t\tlet tempStartNum;\n\t\t// cell num changes with calcs\n\t\tlet tempCellNum;\n\t\tlet loopAxis;\n\t\tif(type === \"all\") {\n\t\t\t// on first move only\n\t\t\tif(this.state.previousLegEndCell === 0) {\n\t\t\t\ttempStartNum = this.state.startingCellNumAll;\n\t\t\t\ttempCellNum = this.state.startingCellNumAll;\n\t\t\t} else {\n\t\t\t\ttempStartNum = this.state.previousLegEndCell;\n\t\t\t\ttempCellNum = this.state.previousLegEndCell;\n\t\t\t}\n\t\t} else if(type === \"partial\") {\n\t\t\t// start of leg\n\t\t\ttempCellNum = this.state.startingCellNumPartial;\n\t\t\t// need to reset previous x and y\n\t\t\tthis.setState({\n\t\t\t\tpreviousLegX: this.state.partialLegStartCoords.x,\n\t\t\t\tpreviousLegY: this.state.partialLegStartCoords.y\n\t\t\t});\n\t\t}\n\t\t// convert based on next move using above function\n\t\t({ tempX, tempY } = this._numToMove(tempX, tempY, \"leg\"));\n\t\t// on first move on grid only - for bottom corner\n\t\tif(this.state.previousLegX === 0 && this.state.previousLegY === 0) {\n\t\t\ttempX = tempX - 1;\n\t\t\ttempY = tempY - 1;\n\t\t\ttempCellNumsArr.push(tempCellNum);\n\t\t}\n\t\t// move in tandem while both vals exist\n\t\twhile(tempX && tempY) {\n\t\t\t// if last was les than current- do this\n\t\t\tif(this.state.previousLegY < y) {\n\t\t\t\ttempCellNum = tempCellNum - this.state.moveRowCells;\n\t\t\t\ttempCellNumsArr.push(tempCellNum);\n\t\t\t} else if(this.state.previousLegY > y) {\n\t\t\t\ttempCellNum = tempCellNum + this.state.moveRowCells;\n\t\t\t\ttempCellNumsArr.push(tempCellNum);\n\t\t\t}\n\t\t\tif(this.state.previousLegX < x) {\n\t\t\t\ttempCellNum = tempCellNum + 1;\n\t\t\t\ttempCellNumsArr.push(tempCellNum);\n\t\t\t} else if(this.state.previousLegX > x) {\n\t\t\t\ttempCellNum = tempCellNum - 1;\n\t\t\t\ttempCellNumsArr.push(tempCellNum);\n\t\t\t}\n\t\t\ttempX = tempX - 1;\n\t\t\ttempY = tempY - 1;\n\t\t}\n\t\t// axis - loop over the only one left X or Y\n\t\tloopAxis = tempY ? (loopAxis = tempY) : (loopAxis = tempX);\n\t\t// if only on val left, move on its own\n\t\tfor(var i = 0; i < loopAxis; i++) {\n\t\t\tif(tempY) {\n\t\t\t\tif(this.state.previousLegY < y) {\n\t\t\t\t\ttempCellNum = tempCellNum - this.state.moveRowCells;\n\t\t\t\t\ttempCellNumsArr.push(tempCellNum);\n\t\t\t\t} else if(this.state.previousLegY > y) {\n\t\t\t\t\ttempCellNum = tempCellNum + this.state.moveRowCells;\n\t\t\t\t\ttempCellNumsArr.push(tempCellNum);\n\t\t\t\t}\n\t\t\t} else if(tempX) {\n\t\t\t\tif(this.state.previousLegX < x) {\n\t\t\t\t\ttempCellNum = tempCellNum + 1;\n\t\t\t\t\ttempCellNumsArr.push(tempCellNum);\n\t\t\t\t} else if(this.state.previousLegX > x) {\n\t\t\t\t\ttempCellNum = tempCellNum - 1;\n\t\t\t\t\ttempCellNumsArr.push(tempCellNum);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tlet legCellNums = {\n\t\t\tstart: tempStartNum,\n\t\t\tend: tempCellNum\n\t\t};\n\t\t// - make this previousLast\n\t\tif(type === \"all\") {\n\t\t\tthis.setState({\n\t\t\t\tpreviousLegEndCell: tempCellNum,\n\t\t\t\tpreviousLegX: x,\n\t\t\t\tpreviousLegY: y,\n\t\t\t\tlegStartEndCellNums: [...this.state.legStartEndCellNums, legCellNums],\n\t\t\t\tholdAllLegColorArrs: [\n\t\t\t\t\t...this.state.holdAllLegColorArrs,\n\t\t\t\t\ttempCellNumsArr\n\t\t\t\t]\n\t\t\t});\n\t\t} else if(type === \"partial\") {\n\t\t\tthis.setState({\n\t\t\t\tpreviousStopX: x,\n\t\t\t\tpreviousStopY: y,\n\t\t\t\tstartingCellNumPartial: tempCellNum,\n\t\t\t\tholdingCompletedArrs: [\n\t\t\t\t\t...this.state.holdingCompletedArrs,\n\t\t\t\t\ttempCellNumsArr\n\t\t\t\t]\n\t\t\t});\n\t\t}\n\t}\n\t// send colored stops to child\n\tcolorAllStops() {\n\t\tthis.setState({\n\t\t\tfinalStopColorArr: this.state.holdAllStopColorIndexes\n\t\t});\n\t}\n\t// on click pass props to child\n\tcolorCompletedStops() {\n\t\tconsole.log(this.state.holdingCompletedArrs);\n\t\tlet merged = [].concat.apply([], this.state.holdingCompletedArrs);\n\t\tthis.setState({\n\t\t\tfinalCompletedColorsArr: merged\n\t\t});\n\t}\n\t// takes driver coords and finds the leg start\n\t_getLegStartfromCoords() {\n\t\tlet selectedDriver = this.state.cursorArr[this.state.cursorIndex];\n\t\tlet coords = selectedDriver.driverCoords;\n\t\t// if x & y is between the stops\n\t\tlet firstStop = this.state.stops.filter((coord, index) => {\n\t\t\tlet stop1 = this.state.stops[index];\n\t\t\tlet stop2 = this.state.stops[index + 1];\n\t\t\tif(stop2 === undefined) return false;\n\t\t\tif(\n\t\t\t\t//x/y are both btw\n\t\t\t\t((coords.y > stop1.y && coords.y < stop2.y) ||\n\t\t\t\t\t(coords.y < stop1.y && coords.y > stop2.y)) &&\n\t\t\t\t((coords.x > stop1.x && coords.x < stop2.x) ||\n\t\t\t\t\t(coords.x < stop1.x && coords.x > stop2.x))\n\t\t\t) {\n\t\t\t\treturn coord;\n\t\t\t} else if(\n\t\t\t\t// y is bwn and x is equal\n\t\t\t\t((coords.y > stop1.y && coords.y < stop2.y) ||\n\t\t\t\t\t(coords.y < stop1.y && coords.y > stop2.y)) &&\n\t\t\t\t(coords.x === stop1.x && coords.x === stop2.x)\n\t\t\t) {\n\t\t\t\treturn coord;\n\t\t\t} else if(\n\t\t\t\t// x is bwn and y is equal\n\t\t\t\t((coords.x > stop1.x && coords.x < stop2.x) ||\n\t\t\t\t\t(coords.x < stop1.x && coords.x > stop2.x)) &&\n\t\t\t\t(coords.y === stop1.y && coords.y === stop2.y)\n\t\t\t) {\n\t\t\t\treturn coord;\n\t\t\t} else if(\n\t\t\t\t//coords are exact match\n\t\t\t\tcoords.x === stop1.x &&\n\t\t\t\tcoords.y === stop1.y\n\t\t\t) {\n\t\t\t\treturn coord;\n\t\t\t\t// first stop  on map with nothing previous\n\t\t\t} else if(index === 0 && coord === this.state.stops[0]) {\n\t\t\t\t// console.log('first stop on map')\n\t\t\t\treturn coord;\n\t\t\t} else {\n\t\t\t\t// not within the stops\n\t\t\t\treturn null;\n\t\t\t}\n\t\t});\n\t\treturn firstStop;\n\t}\n\t// takes driver coords from state and sets new progress and leg\n\tupdateDriverData() {\n\t\tlet selectedDriver = this.state.cursorArr[this.state.cursorIndex];\n\t\tlet firstStop = this._getLegStartfromCoords()[0];\n\t\t// only works with map stops!\n\t\tif(!firstStop) {\n\t\t\tconsole.error(\"Not a map stop\");\n\t\t\treturn false;\n\t\t}\n\t\tlet firstStopIndex = this.state.stops.indexOf(firstStop);\n\t\tlet secondStop = this.state.stops[firstStopIndex + 1];\n\t\tlet diff = utils._absDiff(firstStop, secondStop);\n\t\t// run once for x and for y\n\t\tlet percent = utils._findPercentFromDriverCoords(\n\t\t\tfirstStop,\n\t\t\tselectedDriver.driverCoords,\n\t\t\tdiff.yDiff,\n\t\t\tdiff.xDiff\n\t\t);\n\t\tlet currentLeg = this.state.legs.filter(leg => {\n\t\t\treturn leg.startStop === firstStop.name;\n\t\t});\n\t\tlet newPositionWpercent = {\n\t\t\tactiveLegID: currentLeg[0].legID,\n\t\t\tlegProgress: percent.toString()\n\t\t};\n\n\t\tlet cursorArr = [...this.state.cursorArr];\n\t\t// update the values in the object\n\t\tselectedDriver.data = newPositionWpercent;\n\t\tcursorArr[this.state.cursorIndex] = selectedDriver;\n\t\tthis.setState({\n\t\t\tcursorArr: cursorArr,\n\t\t\tselectedDriver: newPositionWpercent\n\t\t});\n\t\treturn true;\n\t}\n\t// resets data but does not move\n\t_resetCursor() {\n\t\tthis.setState({\n\t\t\tfinalDriverMoveObj: {\n\t\t\t\tdirections: {\n\t\t\t\t\txDir: \"left\",\n\t\t\t\t\tyDir: \"bottom\"\n\t\t\t\t},\n\t\t\t\tpixels: {\n\t\t\t\t\tmoveX: 0,\n\t\t\t\t\tmoveY: 0\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\t// renders all truck instances\n\trenderCursor() {\n\t\tif(this.state.cursorArr && Array.isArray(this.state.cursorArr)) {\n\t\t\treturn this.state.cursorArr.map((driverData, i) => {\n\t\t\t\treturn ( <\n\t\t\t\t\tCursor show = { driverData.show } coords = { driverData } key = { i } colors = { this.state.colors } counter = { this.state.createCounter }\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t});\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\t// position utils-container based on size with graph\n\thandleStyle() {\n\t\t// set to false temorarily\n\t\tif(this.state.floatToggle) {\n\t\t\tif(this.state.utilsTop) {\n\t\t\t\treturn {\n\t\t\t\t\tmarginBottom: this.state.utilsTop.toString() + \"px\"\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\trender() {\n\t\treturn ( <\n\t\t\tmain className = \"page-container\" >\n\t\t\t<\n\t\t\tdiv className = \"water-mark\" >\n\t\t\tIN DEVELOPMENT <\n\t\t\t/div>   <\n\t\t\tModal open = { this.state.modalState } cells = {\n\t\t\t\tMath.sqrt(\n\t\t\t\t\tparseInt(this.state.setGraphSize.x) *\n\t\t\t\t\tparseInt(this.state.setGraphSize.y)\n\t\t\t\t)\n\t\t\t}\n\t\t\tonChange = { this.handleChange } onSubmit = { this.handleSubmit } plots = { this.state.plotObjs.length ? this.state.plotObjs : undefined }\n\t\t\t/>{\" \"} <\n\t\t\tdiv className = \"grid-container\"\n\t\t\tstyle = { this.handleStyle.bind(this)() } >\n\t\t\t<\n\t\t\tdiv className = \"grid\" > { \" \" } { this.renderCursor() } { \" \" } <\n\t\t\tStop coords = { this.state.stopsDirsArr } toggleStopNames = { this.state.showStopNames }\n\t\t\t/>{\" \"} <\n\t\t\tBox toRender = { this.state.boxesToRender } stopsColor = {\n\t\t\t\tthis.state.finalStopColorArr.length ?\n\t\t\t\tthis.state.finalStopColorArr :\n\t\t\t\t\tnull\n\t\t\t}\n\t\t\tlegsColor = {\n\t\t\t\tthis.state.finalLegColorObj ? this.state.finalLegColorObj : null\n\t\t\t}\n\t\t\tcompleteColor = {\n\t\t\t\tthis.state.finalCompletedColorsArr.length ?\n\t\t\t\tthis.state.finalCompletedColorsArr :\n\t\t\t\t\tnull\n\t\t\t}\n\t\t\ttype = { this.state.colorType } legColorsCounter = { this.state.legColorsCounter } completedColorsCounter = { this.state.completedColorsCounter } allColorsCounter = { this.state.allColorsCounter } selectedDriver = { this.state.cursorIndex }\n\t\t\t/>{\" \"} <\n\t\t\t/div>{\" \"} <\n\t\t\t/div>{\" \"} <\n\t\t\tdiv className = { `${\n            this.state.floatToggle ? \"float-toggle\" : \"\"\n          } utils-container` } >\n\t\t\t<\n\t\t\tdiv className = \"driver-controls\" >\n\t\t\t<\n\t\t\tdiv className = \"upper-controls\" >\n\t\t\t<\n\t\t\tMaterialButton onClick = { this.handleClick } buttonNumber = { 4 } size = \"small\"\n\t\t\ttext = \"Show Window\"\n\t\t\ttype = \"primary-button\"\n\t\t\tcolor = \"default\" /\n\t\t\t>\n\t\t\t<\n\t\t\t/div>{\" \"} <\n\t\t\tTabs onChange = { this.handleChange } onSubmit = { this.handleSubmit } onClick = { this.handleClick } values = { { x: this.state.cursorFormX, y: this.state.cursorFormY } } legs = { this.state.legs ? this.state.legs : null } texts = { this.state.texts } cursorArr = {\n\t\t\t\tthis.state.cursorArr.length ? this.state.cursorArr : null\n\t\t\t}\n\t\t\tcolors = { this.state.colors } selectedDriver = { this.state.cursorIndex }\n\t\t\t/>{\" \"} <\n\t\t\tSnackbar snackbarOpen = { this.state.snackbarOpen } onClick = { this.handleClick }\n\t\t\t/>{\" \"} <\n\t\t\t/div>{\" \"} <\n\t\t\t/div>{\" \"} <\n\t\t\t/main>\n\t\t);\n\t}\n\n\thandleModalOpenClose() {\n\t\tthis.setState({\n\t\t\tmodalState: utils._toggleState(this.state.modalState)\n\t\t});\n\t}\n\thandleSliderChange(evt) {\n\t\t// set to false if set to true elsewhere\n\t\tif(this.state.cancelSlide) {\n\t\t\tthis.setState({\n\t\t\t\tcancelSlide: utils._toggleState(this.state.cancelSlide)\n\t\t\t});\n\t\t}\n\t\t// if slider\n\t\tif(evt.value) {\n\t\t\tconsole.log(\"slider coords\", this.state.sliderCoordsArrs);\n\t\t\tconsole.log(\"slider coords\", this.state.finalSliderCoords);\n\t\t\t// flatten on first use & when when toggleStartCheckbox called\n\t\t\tif(!this.state.finalSliderCoords.length) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tfinalSliderCoords: this.state.sliderCoordsArrs.flat()\n\t\t\t\t});\n\t\t\t}\n\t\t\tconsole.log(\"final\", this.state.finalSliderCoords);\n\t\t\t//manage by leg\n\t\t\t//make giant array of all coords\n\t\t\t//for every slider increment move ten\n\t\t\tlet that = this;\n\n\t\t\tfunction getPreviousSliderState() {\n\t\t\t\tlet previousState;\n\t\t\t\tif(that.state.initialSliderChange) {\n\t\t\t\t\tpreviousState = 0;\n\t\t\t\t\tthat.setState({\n\t\t\t\t\t\tinitialSliderChange: false,\n\t\t\t\t\t\tpreviousState: previousState\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tpreviousState = that.state.currentState;\n\t\t\t\t\tthat.setState({\n\t\t\t\t\t\tpreviousState: previousState\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tlet currentState = evt.value;\n\t\t\t\tthat.setState({\n\t\t\t\t\tcurrentState: currentState\n\t\t\t\t});\n\t\t\t}\n\t\t\tgetPreviousSliderState();\n\n\t\t\tfunction sliderDiff() {\n\t\t\t\tlet diff;\n\t\t\t\t// if first move, previous will be null\n\t\t\t\tif(!that.state.previousState) {\n\t\t\t\t\tdiff = that.state.currentState;\n\t\t\t\t} else {\n\t\t\t\t\tdiff = that.state.currentState - that.state.previousState;\n\t\t\t\t}\n\t\t\t\t// console.log('diff', diff)\n\t\t\t\treturn diff;\n\t\t\t}\n\t\t\tsetTimeout(function() {\n\t\t\t\tconsole.log(\"val\", that.state.currentState);\n\t\t\t\t// console.log('diff', sliderDiff())\n\t\t\t\t// console.log(that.state.finalSliderCoords)\n\t\t\t}, 100);\n\t\t\t// move back and forth\n\t\t\tfunction handleIndexValue() {\n\t\t\t\tif(that.state.cancelSlide) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif(sliderDiff() > 0) {\n\t\t\t\t\tthat.setState({\n\t\t\t\t\t\tsliderIndex: that.state.sliderIndex + 1\n\t\t\t\t\t});\n\t\t\t\t} else if(sliderDiff() < 0) {\n\t\t\t\t\tthat.setState({\n\t\t\t\t\t\tsliderIndex: that.state.sliderIndex - 1\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\t// console.log('val', that.state.currentState)\n\t\t\t\t// console.log('diff', sliderDiff())\n\t\t\t\tconsole.log(\"index\", that.state.sliderIndex);\n\t\t\t}\n\n\t\t\tfunction moveDriver() {\n\t\t\t\t// when checkbox in toggleStartCheckbox cancel here\n\t\t\t\tif(that.state.cancelSlide) {\n\t\t\t\t\tconsole.log(\"CANCEL\");\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t// if zero cannot movebackwards\n\t\t\t\tconsole.log(\"state\", that.state.finalSliderCoords);\n\t\t\t\tif(!that.state.slideIndex) {\n\t\t\t\t\t//    console.log('index', that.state.sliderIndex)\n\t\t\t\t\tconsole.log(\"state\", that.state.finalSliderCoords);\n\t\t\t\t\t// console.log(that.state.finalSliderCoords[that.state.sliderIndex])\n\t\t\t\t\tif(\n\t\t\t\t\t\t!that.state.finalSliderCoords[that.state.sliderIndex] &&\n\t\t\t\t\t\t!that.state.finalSliderCoords[that.state.sliderIndex]\n\t\t\t\t\t) {\n\t\t\t\t\t\tconsole.error(\"Cannot move backwards past beginning of graph.\");\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthat.updateDriverWithCoords({\n\t\t\t\t\t\tx: that.state.finalSliderCoords[that.state.sliderIndex].x,\n\t\t\t\t\t\ty: that.state.finalSliderCoords[that.state.sliderIndex].y\n\t\t\t\t\t},\n\t\t\t\t\t\"slider\"\n\t\t\t\t);\n\t\t\t}\n\t\t\tvar i = 0;\n\t\t\tlooper(i);\n\t\t\t// move driver x times with delay\n\t\t\tfunction looper() {\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\tif(sliderDiff() >= 0) {\n\t\t\t\t\t\tif(i < sliderDiff()) {\n\t\t\t\t\t\t\thandleIndexValue();\n\t\t\t\t\t\t\tmoveDriver();\n\t\t\t\t\t\t\tlooper();\n\t\t\t\t\t\t}\n\t\t\t\t\t\ti = i + 1;\n\t\t\t\t\t} else if(sliderDiff() < 0) {\n\t\t\t\t\t\tif(i > sliderDiff()) {\n\t\t\t\t\t\t\thandleIndexValue();\n\t\t\t\t\t\t\tmoveDriver();\n\t\t\t\t\t\t\tlooper();\n\t\t\t\t\t\t}\n\t\t\t\t\t\ti = i - 1;\n\t\t\t\t\t}\n\t\t\t\t}, 10);\n\t\t\t}\n\n\t\t\t// }\n\t\t\tsliderDiff();\n\t\t}\n\t}\n\n\ttoggleSnackbar() {\n\t\tthis.setState({\n\t\t\tsnackbarOpen: utils._toggleState(this.state.snackbarOpen)\n\t\t});\n\t}\n\t// https://stackoverflow.com/questions/16863917/check-if-class-exists-somewhere-in-parent-vanilla-js/19049101\n\thasParentClass(element, checkClass) {\n\t\tif(element.className.split(\" \").indexOf(checkClass) >= 0) return true;\n\t\treturn (\n\t\t\telement.parentElement &&\n\t\t\tthis.hasParentClass(element.parentElement, checkClass)\n\t\t);\n\t}\n\t// https://stackoverflow.com/a/47580775/5972531\n\ttoggleShowCursor(e) {\n\t\tlet currentCursor = this.state.cursorArr[this.state.cursorIndex];\n\t\tcurrentCursor.show = !currentCursor.show;\n\t\tconst cursorArrCopy = [...this.state.cursorArr];\n\t\tthis.setState({\n\t\t\tcursorArr: cursorArrCopy\n\t\t});\n\t}\n\thandleClick(event) {\n\t\tif(!event) return;\n\t\t// For TAB clicks - sending strings back here as return vals\n\t\t// to remove drivers from tabs when clicking X\n\t\tif(event.event && event.iconClick && event.cursor) {\n\t\t\t// don't remove single driver\n\t\t\tif(this.state.cursorArr.length > 1) {\n\t\t\t\tthis.removeDriver(event);\n\t\t\t}\n\t\t\t// to detect which driver is selected\n\t\t} else if(event.event && !event.iconClick && event.cursor) {\n\t\t\t// use data prop on html\n\t\t\tlet tabClickedIndex = parseInt(event.event.target.dataset.key);\n\t\t\t// change to another cursor based on click\n\t\t\tthis.changeCursor(\"change-cursor\", tabClickedIndex);\n\t\t\tlet that = this;\n\t\t\tsetTimeout(function() {\n\t\t\t\tthat.toggleShowCursor(event);\n\t\t\t});\n\t\t\t// if events and not strings\n\t\t} else if(event.target.classList.contains(\"add-button\")) {\n\t\t\tevent.stopPropagation();\n\t\t\t// call add new driver\n\t\t\tthis.addNewCursor();\n\t\t} else if(event.target.classList.contains(\"secondary-button\")) {\n\t\t\tevent.stopPropagation();\n\t\t\tif(event.target.dataset.number === \"1\") {\n\t\t\t\tthis.colorAllStops();\n\t\t\t\tthis.setState({\n\t\t\t\t\tallColorsCounter: this.state.allColorsCounter + 1,\n\t\t\t\t\tcolorType: \"all\"\n\t\t\t\t});\n\t\t\t} else if(event.target.dataset.number === \"2\") {\n\t\t\t\tthis.colorCompletedStops();\n\t\t\t\tthis.setState({\n\t\t\t\t\tcompletedColorsCounter: this.state.completedColorsCounter + 1,\n\t\t\t\t\tcolorType: \"complete\"\n\t\t\t\t});\n\t\t\t}\n\t\t\t// if button and has parent class of snackbar\n\t\t} else if(\n\t\t\tevent.target.type === \"button\" &&\n\t\t\tthis.hasParentClass(event.target, \"snackbar\")\n\t\t) {\n\t\t\t// send this to child to close\n\t\t\tthis.setState({\n\t\t\t\tsnackbarOpen: false\n\t\t\t});\n\t\t\t// for show modal button\n\t\t} else if(\n\t\t\tevent.target.dataset.number === \"4\" &&\n\t\t\tevent.target.classList.contains(\"button\")\n\t\t) {\n\t\t\tthis.setState({\n\t\t\t\tmodalState: utils._toggleState(this.state.modalState)\n\t\t\t});\n\t\t}\n\t}\n\tonDropdownSubmit(event) {\n\t\tlet selectedCursor = this.state.cursorArr[this.state.cursorIndex];\n\t\tevent.preventDefault();\n\t\tif(event.target.name === \"driver-dropdown\") {\n\t\t\t// user needs to choose a leg else return\n\t\t\tif(!this.state.cursorLegInput) return;\n\t\t\tlet progress;\n\t\t\tif(!this.state.cursorInputProgress) {\n\t\t\t\tprogress = 0;\n\t\t\t} else {\n\t\t\t\tprogress = this.state.cursorInputProgress;\n\t\t\t}\n\t\t\tlet updatedData = {\n\t\t\t\tactiveLegID: this.state.cursorLegInput,\n\t\t\t\tlegProgress: progress\n\t\t\t};\n\t\t\tselectedCursor.data = updatedData;\n\t\t\t//update driver position in state\n\t\t\tthis.setState({\n\t\t\t\tcursorArr: this.state.cursorArr\n\t\t\t});\n\t\t\tlet that = this;\n\t\t\tsetTimeout(function() {\n\t\t\t\tthat.updateCursorwithData(selectedCursor.data);\n\t\t\t\tthat.colorCompleted(selectedCursor.data.activeLegID);\n\t\t\t}, 100);\n\t\t} else if(event.target.name === \"color\") {\n\t\t\tthis.colorLeg(this.state.legToColorID);\n\t\t}\n\t}\n\t// hold vals in input until next entered\n\thandleChange(evt) {\n\t\t// to filter out undefined errors\n\t\tif(\n\t\t\tevt.target.name === \"x\" &&\n\t\t\tevt.currentTarget.parentNode.parentNode.parentNode.classList.contains(\n\t\t\t\t\"graph-size\"\n\t\t\t)\n\t\t) {\n\t\t\tlet xVal = evt.target.value;\n\t\t\t// onChange store the input sizes\n\t\t\tthis.setState(prevState => ({\n\t\t\t\tstoreGraphSize: {\n\t\t\t\t\t...prevState.storeGraphSize,\n\t\t\t\t\tx: xVal\n\t\t\t\t}\n\t\t\t}));\n\t\t} else if(\n\t\t\tevt.target.name === \"y\" &&\n\t\t\tevt.currentTarget.parentNode.parentNode.parentNode.classList.contains(\n\t\t\t\t\"graph-size\"\n\t\t\t)\n\t\t) {\n\t\t\tlet yVal = evt.target.value;\n\t\t\tthis.setState(prevState => ({\n\t\t\t\tstoreGraphSize: {\n\t\t\t\t\t...prevState.storeGraphSize,\n\t\t\t\t\ty: yVal\n\t\t\t\t}\n\t\t\t}));\n\t\t} else if(\n\t\t\tevt.target.name === \"x\" &&\n\t\t\t!evt.currentTarget.parentNode.parentNode.parentNode.classList.contains(\n\t\t\t\t\"graph-size\"\n\t\t\t)\n\t\t) {\n\t\t\tthis.setState({\n\t\t\t\tcursorFormX: evt.target.value\n\t\t\t});\n\t\t} else if(\n\t\t\tevt.target.name === \"y\" &&\n\t\t\t!evt.currentTarget.parentNode.parentNode.parentNode.classList.contains(\n\t\t\t\t\"graph-size\"\n\t\t\t)\n\t\t) {\n\t\t\tthis.setState({\n\t\t\t\tcursorFormY: evt.target.value\n\t\t\t});\n\t\t} else if(evt.target.name === \"driver-select\") {\n\t\t\tthis.setState({ cursorLegInput: evt.target.value });\n\t\t} else if(evt.target.name === \"progress-input\") {\n\t\t\tthis.setState({ cursorInputProgress: evt.target.value });\n\t\t\t// comes from names on checkboxes\n\t\t} else if(evt.target.name === \"float-toggle\") {\n\t\t\t// go to bottom on toggle\n\t\t\tlet offSet = this.getWindowOffset();\n\t\t\tif(offSet) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tutilsTop: offSet,\n\t\t\t\t\tfloatToggle: utils._toggleState(this.state.floatToggle)\n\t\t\t\t});\n\t\t\t}\n\t\t} else if(evt.target.name === \"stop-name-toggle\") {\n\t\t\tthis.setState({\n\t\t\t\tshowStopNames: utils._toggleState(this.state.showStopNames)\n\t\t\t});\n\t\t} else if(evt.target.name === \"color-select\") {\n\t\t\tthis.setState({\n\t\t\t\tvalue: evt.target.value,\n\t\t\t\tlegToColorID: evt.target.value\n\t\t\t});\n\t\t} else if(evt.target.name === \"icon-start\") {\n\t\t\tthis.toggleStartCheckbox();\n\t\t\t// plot points from modal input\n\t\t} else if(\n\t\t\tevt.target.name === \"xSelect\" ||\n\t\t\tevt.target.name === \"ySelect\" ||\n\t\t\t(evt.target.classList && evt.target.classList.contains(\"close-icon\")) ||\n\t\t\t(evt.target.nextSibling &&\n\t\t\t\tevt.target.nextSibling.classList.contains(\"modal\"))\n\t\t) {\n\t\t\tif(evt.target.name === \"xSelect\") {\n\t\t\t\tthis.setState(prevState => ({\n\t\t\t\t\ttempPlotObj: {\n\t\t\t\t\t\t...prevState.tempPlotObj,\n\t\t\t\t\t\tx: evt.target.value\n\t\t\t\t\t}\n\t\t\t\t}));\n\t\t\t\tlet that = this;\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\tthat.receivePlotData(that.state.tempPlotObj);\n\t\t\t\t});\n\t\t\t} else if(evt.target.name === \"ySelect\") {\n\t\t\t\tthis.setState(prevState => ({\n\t\t\t\t\ttempPlotObj: {\n\t\t\t\t\t\t...prevState.tempPlotObj,\n\t\t\t\t\t\ty: evt.target.value\n\t\t\t\t\t}\n\t\t\t\t}));\n\t\t\t\tlet that = this;\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\tthat.receivePlotData(that.state.tempPlotObj);\n\t\t\t\t});\n\t\t\t\t// when X is clicked trigger this - open close\n\t\t\t} else if(evt.target.classList.contains(\"close-icon\")) {\n\t\t\t\tthis.handleModalOpenClose();\n\t\t\t\t// on modal close trigger this - open close\n\t\t\t} else if(evt.target.nextSibling.classList.contains(\"modal\")) {\n\t\t\t\tthis.handleModalOpenClose();\n\t\t\t}\n\t\t}\n\t}\n\t// set plot points from inputs in modal\n\treceivePlotData(obj) {\n\t\tconsole.log(obj);\n\t\tif(!obj.x || !obj.y) {\n\t\t\tconsole.error(\"Must have two plot points\");\n\t\t\treturn false;\n\t\t}\n\t\tthis.setState({\n\t\t\ttempPlotObj: obj,\n\t\t\tplotObjs: [...this.state.plotObjs, this.state.tempPlotObj]\n\t\t});\n\t}\n\ttoggleStartCheckbox() {\n\t\tlet setSliderCoords;\n\t\tlet tempSliderIndex;\n\t\tlet sliderChunkCopy;\n\t\t// if not at first stop, include all coords in slider\n\t\tconsole.log(this.state.sliderSlicedChunk);\n\t\tif(this.state.iconStartAtfirstStop) {\n\t\t\t// slice off part before start\n\t\t\tsliderChunkCopy = this.state.sliderCoordsArrs.splice(0, 1);\n\t\t\t// reassign arr without that part\n\t\t\tsetSliderCoords = this.state.sliderCoordsArrs;\n\t\t\t// console.log(\"S\" ,setSliderCoords)\n\t\t\ttempSliderIndex = 10;\n\t\t\tthis.updateDriverWithCoords({\n\t\t\t\t\tx: this.state.stops[0].x,\n\t\t\t\t\ty: this.state.stops[0].y\n\t\t\t\t},\n\t\t\t\t\"checkbox\"\n\t\t\t);\n\t\t} else {\n\t\t\t// if at first stop, only allow slider from there\n\t\t\tsetSliderCoords = this.state.sliderSlicedChunk.concat(\n\t\t\t\tthis.state.sliderCoordsArrs\n\t\t\t);\n\t\t\tconsole.log(\"slider\", this.state.sliderCoordsArrs);\n\t\t\ttempSliderIndex = 0;\n\t\t\tthis.updateDriverWithCoords({\n\t\t\t\t\tx: 0,\n\t\t\t\t\ty: 0\n\t\t\t\t},\n\t\t\t\t\"checkbox\"\n\t\t\t);\n\t\t}\n\t\tthis.setState({\n\t\t\tsliderSlicedChunk: sliderChunkCopy ?\n\t\t\t\tsliderChunkCopy :\n\t\t\t\tthis.state.sliderSlicedChunk,\n\t\t\tcancelSlide: true,\n\t\t\ticonStartAtfirstStop: utils._toggleState(this.state.iconStartAtfirstStop),\n\t\t\tsliderCoordsArrs: setSliderCoords,\n\t\t\tsliderIndex: tempSliderIndex,\n\t\t\t// flatten array to remove/add coords when clicked\n\t\t\tfinalSliderCoords: setSliderCoords.flat()\n\t\t});\n\t}\n\t// add the beginning to the stops\n\taddStartStop() {\n\t\t// make an array including beginning\n\t\tlet stops = [{\n\t\t\tname: \"A\",\n\t\t\tx: 0,\n\t\t\ty: 0\n\t\t}];\n\t\tlet arr = stops.concat(this.state.stopsCopy);\n\t\tthis.setState({\n\t\t\tstopsCopy: arr\n\t\t});\n\t}\n\t// scroll page to the bottom\n\tscrollToBottom() {\n\t\twindow.scrollTo(0, document.body.scrollHeight);\n\t}\n\tgetWindowOffset() {\n\t\tlet utils = document.querySelector(\".utils-container\");\n\t\tlet grid = document.querySelector(\".grid-container\");\n\n\t\tif(utils.offsetHeight + grid.offsetHeight > window.innerHeight) {\n\t\t\treturn utils.offsetHeight;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\tcomponentDidMount() {\n\t\tlet that = this;\n\t\t// create graph size based on input - COMMENT OUT\n\t\tthis.createGraph();\n\t\tthis.scrollToBottom();\n\t\tlet utils = document.querySelector(\".utils-container\");\n\t\tsetTimeout(function() {\n\t\t\tthat.setState({\n\t\t\t\tutilsTop: utils.offsetHeight\n\t\t\t});\n\t\t}, 500);\n\n\t\tsetTimeout(function() {\n\t\t\t// console.log(that.state.legs)\n\t\t\t//--- COMMENT OUT\n\t\t\t// that.state.stops.map((stop, i) => {\n\t\t\t//         that.legStartEnd(stop.x, stop.y,'all')\n\t\t\t//         that.colorGrid(stop.x, stop.y, 'all')\n\t\t\t//\n\t\t\t// })\n\t\t\t// call these with the default driver on mount\n\t\t\t//--- COMMENT OUT\n\t\t\tthat.addNewCursor();\n\t\t\tthat.updateDriverWithCoords({ x: 0, y: 0 }, \"manual\");\n\t\t\t// that.updateCursorwithData(that.state.loadingDataArr[0])\n\t\t\t// that.colorCompleted(that.state.loadingDataArr[0].activeLegID, \"coords\")\n\n\t\t\t// that.pleted(that.state.driverCoords.y)\n\t\t\t// console.log('state',that.state)\n\t\t}, 100);\n\n\t\t// make array of coords to move icon\n\t\tsetTimeout(function() {\n\t\t\t// start at first stop\n\t\t\t// that.updateDriverWithCoords({\n\t\t\t//     x: 0,\n\t\t\t//     y: 0,\n\t\t\t// }, \"checkbox\")\n\t\t\t//--- COMMENT OUT\n\t\t\t// start from map beginng\n\t\t\t// that.addStartStop()\n\t\t\t// make slider coords\n\t\t\t//--- COMMENT OUT\n\t\t\t//     that.state.stopsCopy.map((stop, index) => {\n\t\t\t//         if(!that.state.stopsCopy[index + 1]) return\n\t\t\t//         let { xSlideCoord, ySlideCoord } = that.slideRange(stop, that.state.stopsCopy[index + 1])\n\t\t\t//         console.log(xSlideCoord, ySlideCoord)\n\t\t\t//         that.sliderCoordsCalc(xSlideCoord, ySlideCoord, \"stop-coords\")\n\t\t\t//     })\n\t\t}, 500);\n\t}\n\n\t// takes two ranges and combines the arrays\n\t// calcs where smaller axis points coords should be placed with larger\n\t// makes arr of arrs of all slider coords to follow\n\tsliderCoordsCalc(xSlideCoord, ySlideCoord, type) {\n\t\tlet storeArr = [];\n\t\tlet currentSmall;\n\t\tlet previousSmall;\n\t\t// console.log('COORDS', xSlideCoord, ySlideCoord)\n\n\t\tlet xArr = xSlideCoord;\n\t\tlet yArr = ySlideCoord;\n\n\t\t// console.log(xArr)\n\t\t// console.log(yArr)\n\t\tlet longerArr;\n\t\tlet shorterArr;\n\t\tif(xArr.length >= yArr.length) {\n\t\t\tlongerArr = xArr;\n\t\t\tshorterArr = yArr;\n\t\t} else {\n\t\t\tlongerArr = yArr;\n\t\t\tshorterArr = xArr;\n\t\t}\n\t\t// store last values of arrs\n\t\tlet lastXarr = xArr[xArr.length - 1];\n\t\tlet lastYarr = yArr[yArr.length - 1];\n\t\tif(xArr.length) {\n\t\t\tthis.setState({ lastXarr });\n\t\t}\n\t\tif(yArr.length) {\n\t\t\tthis.setState({ lastYarr });\n\t\t}\n\t\t// console.log('short',shorterArr)\n\t\t// console.log('long',longerArr)\n\t\tlet obj;\n\t\t// j runs on all small loop\n\t\tlet j = 0;\n\n\t\tfor(var i = 0; i < longerArr.length; i++) {\n\t\t\t// Vals to use while function runs\n\t\t\t// if there and not equal to last, reassign\n\t\t\tif(shorterArr[i] && shorterArr[i] !== currentSmall) {\n\t\t\t\tcurrentSmall = shorterArr[i];\n\t\t\t} else {\n\t\t\t\t// if not there, use the value in state\n\t\t\t\tif(!currentSmall) {\n\t\t\t\t\tpreviousSmall = this.state.previousSmall;\n\t\t\t\t} else {\n\t\t\t\t\t// if there but the same, use the one stored in current and save to state\n\t\t\t\t\tpreviousSmall = currentSmall;\n\t\t\t\t\tthis.setState({ previousSmall: previousSmall });\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(j < shorterArr.length) {\n\t\t\t\t// loop through both until shorter runs out\n\t\t\t\tobj = {\n\t\t\t\t\t[Object.keys(longerArr[i])[0]]: Object.values(longerArr[i])[0],\n\t\t\t\t\t[Object.keys(shorterArr[i])[0]]: Object.values(shorterArr[i])[0]\n\t\t\t\t};\n\t\t\t\t// increase inner loop\n\t\t\t\tj++;\n\t\t\t} else {\n\t\t\t\t// inside loop already use val stored within the function\n\t\t\t\tif(i > 0) {\n\t\t\t\t\tobj = {\n\t\t\t\t\t\t[Object.keys(longerArr[i])[0]]: Object.values(longerArr[i])[0],\n\t\t\t\t\t\t[Object.keys(previousSmall)[0]]: Object.values(previousSmall)[0]\n\t\t\t\t\t};\n\t\t\t\t\t// begginning of loop - get value from state and set it on first loop run\n\t\t\t\t} else {\n\t\t\t\t\t// if long x, get last y\n\t\t\t\t\tif(Object.keys(longerArr[i])[0] === \"x\") {\n\t\t\t\t\t\tpreviousSmall = this.state.lastYarr;\n\t\t\t\t\t\tthis.setState({ previousSmall });\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// if long y, get last x\n\t\t\t\t\t\tpreviousSmall = this.state.lastXarr;\n\t\t\t\t\t\tthis.setState({ previousSmall });\n\t\t\t\t\t}\n\t\t\t\t\t// console.log('first Run', this.state.previousSmall)\n\t\t\t\t\tobj = {\n\t\t\t\t\t\t[Object.keys(longerArr[i])[0]]: Object.values(longerArr[i])[0],\n\t\t\t\t\t\t[Object.keys(previousSmall)[0]]: Object.values(previousSmall)[0]\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t\t\tstoreArr.push(obj);\n\n\t\t\t// console.log(' obj', obj)\n\t\t}\n\t\t// console.log('stops1',this.state.stopsCopy[0])\n\t\t// console.log('stops2',this.state.stopsCopy[1])\n\t\t// console.log('store',storeArr)\n\n\t\tthis.setState({\n\t\t\tsliderCoordsArrs: [...this.state.sliderCoordsArrs, storeArr]\n\t\t});\n\t}\n\n\t// creates two rangeArr each x/y  start - stop\n\t// this sets state for sliderCalcs\n\tslideRange(startObj, endObj) {\n\t\tif(!startObj || !endObj) return;\n\t\t// console.log(startObj)\n\t\tlet yArr = [];\n\t\tlet xArr = [];\n\t\tlet x1 = startObj.x;\n\t\tlet y1 = startObj.y;\n\t\tlet { xToMove, yToMove } = this._numBetweenStops(startObj, endObj);\n\t\t// console.log(\"x\", xToMove)\n\t\t// console.log(\"y\", yToMove)\n\t\t// find if pos of neg\n\t\tlet xIsInteger = xToMove < 0 ? false : true;\n\t\tlet yIsInteger = yToMove < 0 ? false : true;\n\t\t// make arr of x/y stops\n\t\tfor(var i = 0; i < Math.abs(yToMove); i++) {\n\t\t\tif(yIsInteger) {\n\t\t\t\tlet obj = { y: y1 + (i + 1) };\n\t\t\t\tyArr.push(obj);\n\t\t\t} else {\n\t\t\t\tlet obj = { y: y1 - (i + 1) };\n\t\t\t\tyArr.push(obj);\n\t\t\t}\n\t\t}\n\t\tfor(var j = 0; j < Math.abs(xToMove); j++) {\n\t\t\tif(xIsInteger) {\n\t\t\t\tlet obj = { x: x1 + (j + 1) };\n\t\t\t\txArr.push(obj);\n\t\t\t} else {\n\t\t\t\tlet obj = { x: y1 - (j + 1) };\n\t\t\t\txArr.push(obj);\n\t\t\t}\n\t\t}\n\t\t// console.log(xArr)\n\t\t// console.log(yArr)\n\t\t// push to state\n\t\treturn {\n\t\t\txSlideCoord: xArr,\n\t\t\tySlideCoord: yArr\n\t\t};\n\t}\n\t_numBetweenStops(stop1, stop2) {\n\t\tlet x1 = stop1.x;\n\t\tlet x2 = stop2.x;\n\t\tlet y1 = stop1.y;\n\t\tlet y2 = stop2.y;\n\t\t// console.log(y1)\n\t\t// console.log(y2)\n\t\tlet xToMove;\n\t\tlet yToMove;\n\t\tif(x1 > x2) {\n\t\t\txToMove = x1 - x2;\n\t\t\txToMove = -Math.abs(xToMove);\n\t\t} else {\n\t\t\txToMove = x2 - x1;\n\t\t}\n\n\t\tif(y1 > y2) {\n\t\t\tyToMove = y1 - y2;\n\t\t\tyToMove = -Math.abs(yToMove);\n\t\t} else {\n\t\t\tyToMove = y2 - y1;\n\t\t}\n\t\treturn { xToMove, yToMove };\n\t}\n\thandleSubmit(event) {\n\t\tevent.preventDefault();\n\t\tlet that = this;\n\n\t\tfunction validGraphSides(input) {\n\t\t\tif(input.x !== input.y) {\n\t\t\t\tconsole.error(\"X and Y must be equal\");\n\t\t\t\talert(\"X and Y values must be equal\");\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\t// on submit use the stored sizes\n\t\tif(event.target.name === \"graph-size\") {\n\t\t\tif(!validGraphSides(this.state.storeGraphSize)) return;\n\t\t\tthis.setState({\n\t\t\t\tsetGraphSize: this.state.storeGraphSize\n\t\t\t});\n\t\t\tsetTimeout(function() {\n\t\t\t\tconsole.log(that.state.setGraphSize);\n\t\t\t\tthat.createGraph();\n\t\t\t\treturn;\n\t\t\t}, 100);\n\t\t}\n\t\tlet currentCursor = this.state.cursorArr[this.state.cursorIndex];\n\t\t// update coords\n\t\t//set driver to those\n\t\t//UPDATE STATE DATA\n\t\tif(\n\t\t\tevent.target.name === \"driver-dropdown\" ||\n\t\t\tevent.target.name === \"color\"\n\t\t) {\n\t\t\tthis.onDropdownSubmit(event);\n\t\t} else if(event.target.name === \"driver-form\") {\n\t\t\tlet formData = {};\n\t\t\t// set to new input. If blank use the previous one\n\t\t\tif(this.state.cursorFormX) {\n\t\t\t\tformData[\"x\"] = parseInt(this.state.cursorFormX);\n\t\t\t} else {\n\t\t\t\tformData[\"x\"] = currentCursor.driverCoords.x;\n\t\t\t}\n\t\t\tif(this.state.cursorFormY) {\n\t\t\t\tformData[\"y\"] = parseInt(this.state.cursorFormY);\n\t\t\t} else {\n\t\t\t\tformData[\"y\"] = currentCursor.driverCoords.y;\n\t\t\t}\n\t\t\tcurrentCursor.driverCoords = formData;\n\t\t\t//ACTUALLY MOVE CURSOR\n\t\t\tthis.updateDriverWithCoords(\"\", \"form\");\n\t\t\tlet that = this;\n\t\t\tsetTimeout(function() {\n\t\t\t\t//UPDATE DRIVER DATA\n\t\t\t\t// returns false if not a stop\n\t\t\t\tlet result = that.updateDriverData();\n\t\t\t\tif(!result) {\n\t\t\t\t\t// not part of route\n\t\t\t\t\tthat.toggleSnackbar();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthat.colorCompleted(that.state.selectedDriver.activeLegID);\n\t\t\t}, 100);\n\t\t} else if(\n\t\t\tevent.target.classList &&\n\t\t\tevent.target.classList.contains(\"modal-submit\")\n\t\t) {\n\t\t\tthis.handlePlotLoading(\"manual\");\n\t\t} else if(\n\t\t\tevent.target.classList &&\n\t\t\tevent.target.classList.contains(\"auto-plot-submit\")\n\t\t) {\n\t\t\tthis.handlePlotLoading(\"auto\");\n\t\t}\n\t}\n\thandlePlotLoading(type) {\n\t\tlet that = this;\n\t\tif(type === \"manual\") {\n\t\t\tlet json = utils._makePlotJson(this.state.plotObjs);\n\t\t\tthis.setState({ stops: json });\n\t\t\tthis._setStopCoords(\"stop\");\n\t\t\tsetTimeout(function() {\n\t\t\t\tthat.legConstructor(that.state.stops);\n\t\t\t\tthat.state.stops.forEach((stop, i) => {\n\t\t\t\t\tthat.legStartEnd(stop.x, stop.y, \"all\");\n\t\t\t\t\tthat.colorGrid(stop.x, stop.y, \"all\");\n\t\t\t\t});\n\t\t\t});\n\t\t} else if(type === \"auto\") {\n\t\t\tthis._callStops().then(res => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tstops: res.stops,\n\t\t\t\t\tstopsCopy: res.stops,\n\t\t\t\t\t// set auto 100\n\t\t\t\t\tsetGraphSize: { x: \"100\", y: \"100\" },\n\t\t\t\t\tplotObjs: res.stops\n\t\t\t\t});\n\t\t\t\tthis.createGraph();\n\t\t\t\tthis._setStopCoords(\"stop\");\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\tthat.legConstructor(that.state.stops);\n\t\t\t\t\tthat.state.stops.forEach((stop, i) => {\n\t\t\t\t\t\tthat.legStartEnd(stop.x, stop.y, \"all\");\n\t\t\t\t\t\tthat.colorGrid(stop.x, stop.y, \"all\");\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t}\n\t_legIndex(input) {\n\t\tlet index;\n\t\tswitch (input) {\n\t\t\t// pre-stop\n\t\t\tcase \"ZZ\":\n\t\t\t\tindex = 0;\n\t\t\t\tbreak;\n\t\t\tcase \"AB\":\n\t\t\t\tindex = 1;\n\t\t\t\tbreak;\n\t\t\tcase \"BC\":\n\t\t\t\tindex = 2;\n\t\t\t\tbreak;\n\t\t\tcase \"CD\":\n\t\t\t\tindex = 3;\n\t\t\t\tbreak;\n\t\t\tcase \"DE\":\n\t\t\t\tindex = 4;\n\t\t\t\tbreak;\n\t\t\tcase \"EF\":\n\t\t\t\tindex = 5;\n\t\t\t\tbreak;\n\t\t\tcase \"FG\":\n\t\t\t\tindex = 6;\n\t\t\t\tbreak;\n\t\t\tcase \"GH\":\n\t\t\t\tindex = 7;\n\t\t\t\tbreak;\n\t\t\tcase \"HI\":\n\t\t\t\tindex = 8;\n\t\t\t\tbreak;\n\t\t\tcase \"IJ\":\n\t\t\t\tindex = 9;\n\t\t\t\tbreak;\n\t\t\tcase \"JK\":\n\t\t\t\tindex = 10;\n\t\t\t\tbreak;\n\t\t\tcase \"KL\":\n\t\t\t\tindex = 11;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tconsole.error(\"Nothing in switch\");\n\t\t\t\tbreak;\n\t\t}\n\t\treturn index;\n\t}\n\tcolorLeg(input) {\n\t\t// - get val from Dropdown-\n\t\t// change it to an index\n\t\tlet index = this._legIndex(input);\n\t\t// get leg using index out of array\n\t\tlet leg = this.state.holdAllLegColorArrs[index];\n\t\t// set state on child to change the color\n\t\tlet legObj = { leg, index };\n\t\tthis.setState({\n\t\t\tfinalLegColorObj: legObj,\n\t\t\tlegColorsCounter: this.state.legColorsCounter + 1,\n\t\t\tcolorType: \"leg\"\n\t\t});\n\t}\n\t// build legs out of stops\n\tlegConstructor(stops) {\n\t\tlet legs = stops\n\t\t\t.map((stop, i) => {\n\t\t\t\tif(!stops[i + 1]) return false;\n\t\t\t\treturn {\n\t\t\t\t\tstartStop: stop.name,\n\t\t\t\t\tendStop: stops[i + 1].name,\n\t\t\t\t\tlegID: `${stop.name}${stops[i + 1].name}`\n\t\t\t\t};\n\t\t\t})\n\t\t\t.filter(stop => stop);\n\t\tthis.setState({\n\t\t\tlegs: legs\n\t\t});\n\t\treturn;\n\t}\n\t// set coords in pxs of plots\n\t_setStopCoords(type, x, y) {\n\t\tlet that = this;\n\t\tlet coordsArr = [];\n\t\t// filter out undefined\n\t\tif(type === \"stop\") {\n\t\t\tsetTimeout(function() {\n\t\t\t\tif(that.state.stops.length > 0) {\n\t\t\t\t\tthat.state.stops.forEach(stop => {\n\t\t\t\t\t\tlet pixels = utils._convertToPixels(stop.x, stop.y);\n\t\t\t\t\t\tlet coords = {\n\t\t\t\t\t\t\tpixels: pixels,\n\t\t\t\t\t\t\tdirections: {\n\t\t\t\t\t\t\t\txDir: \"left\",\n\t\t\t\t\t\t\t\tyDir: \"bottom\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t\tcoordsArr.push(coords);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tthat.setState({\n\t\t\t\t\tstopsDirsArr: coordsArr\n\t\t\t\t});\n\t\t\t}, 1050);\n\t\t} else if(type === \"driver\") {\n\t\t\tlet pixels = utils._convertToPixels(x, y);\n\t\t\tlet coords = {\n\t\t\t\tpixels: pixels,\n\t\t\t\tdirections: {\n\t\t\t\t\txDir: \"left\",\n\t\t\t\t\tyDir: \"bottom\"\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn coords;\n\t\t}\n\t}\n\t_callStops = async () => {\n\t\tconst response = await fetch(\"/stops\");\n\t\tconst body = await response.json();\n\n\t\tif(response.status !== 200) {\n\t\t\tthrow Error(body.message);\n\t\t}\n\t\treturn body;\n\t};\n}\n\nexport default Grid;\n","import React, {\n\tComponent\n} from \"react\";\nimport \"./App.css\";\nimport Grid from './components/Grid'\n\nclass App extends Component {\n\n        render() {\n\n        \treturn(<Grid  /> )\n        }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}